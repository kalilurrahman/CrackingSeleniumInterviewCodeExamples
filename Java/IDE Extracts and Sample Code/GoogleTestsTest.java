// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
public class GoogleTestsTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new FirefoxDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  public String waitForWindow(int timeout) {
    try {
      Thread.sleep(timeout);
    } catch (InterruptedException e) {
      e.printStackTrace();
    }
    Set<String> whNow = driver.getWindowHandles();
    Set<String> whThen = (Set<String>) vars.get("window_handles");
    if (whNow.size() > whThen.size()) {
      whNow.removeAll(whThen);
    }
    return whNow.iterator().next();
  }
  @Test
  public void test1() {
    // Test name: Test_1
    // Step # | name | target | value | comment
    // 1 | click | name=q |  | 
    driver.findElement(By.name("q")).click();
    // 2 | type | name=q | testing | 
    driver.findElement(By.name("q")).sendKeys("testing");
    // 3 | sendKeys | name=q | ${KEY_ENTER} | 
    driver.findElement(By.name("q")).sendKeys(Keys.ENTER);
    // 4 | mouseOver | id=uid_1 |  | 
    {
      WebElement element = driver.findElement(By.id("uid_1"));
      Action builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 5 | mouseOut | id=uid_1 |  | 
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Action builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    // 6 | mouseOver | css=.NFQFxe:nth-child(2) .izHQgf |  | 
    {
      WebElement element = driver.findElement(By.cssSelector(".NFQFxe:nth-child(2) .izHQgf"));
      Action builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 7 | mouseOut | css=.NFQFxe:nth-child(2) .izHQgf |  | 
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Action builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    // 8 | click | css=.NFQFxe:nth-child(2) .RJn8N |  | 
    driver.findElement(By.cssSelector(".NFQFxe:nth-child(2) .RJn8N")).click();
    // 9 | click | linkText=Wikipedia |  | 
    vars.put("window_handles", driver.getWindowHandles());
    // 10 | storeWindowHandle | root |  | 
    driver.findElement(By.linkText("Wikipedia")).click();
    // 11 | selectWindow | handle=${win9463} |  | 
    vars.put("win9463", waitForWindow(2000));
    // 12 | click | css=.tocsection-45 > a > .toctext |  | 
    vars.put("root", driver.getWindowHandle());
    // 13 | click | linkText=Test automation |  | 
    driver.switchTo().window(vars.get("win9463").toString());
    // 14 | click | css=.tocsection-5 .toctext |  | 
    driver.findElement(By.cssSelector(".tocsection-45 > a > .toctext")).click();
    // 15 | click | css=.thumbimage |  | 
    driver.findElement(By.linkText("Test automation")).click();
    // 16 | mouseOver | css=.thumbimage |  | 
    driver.findElement(By.cssSelector(".tocsection-5 .toctext")).click();
    // 17 | runScript | window.scrollTo(0,0) |  | 
    driver.findElement(By.cssSelector(".thumbimage")).click();
    // 18 | mouseOut | css=.thumbimage |  | 
    {
      WebElement element = driver.findElement(By.cssSelector(".thumbimage"));
      Action builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 19 | click | css=.mw-mmv-final-image |  | 
    js.executeScript("window.scrollTo(0,0)");
    // 20 | click | css=body |  | 
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Action builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    // 21 | close |  |  | 
    driver.findElement(By.cssSelector(".mw-mmv-final-image")).click();
    // 22 | selectWindow | handle=${root} |  | 
    driver.findElement(By.cssSelector("body")).click();
    // 23 | assertTitle | title | Google | Test Google Title in Google Home Page
    driver.close();
    // 24 | doubleClickAt | xpath=//html[contains(.,'Preparing to run your test')] |  | 
    driver.switchTo().window(vars.get("root").toString());
    assertThat(driver.getTitle(), is("title"));
    {
      WebElement element = driver.findElement(By.xpath("//html[contains(.,\'Preparing to run your test\')]"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
  }
}
