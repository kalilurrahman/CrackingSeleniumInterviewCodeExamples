// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
public class TheInternetHerokuSeleniumTestAppTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new FirefoxDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  public String waitForWindow(int timeout) {
    try {
      Thread.sleep(timeout);
    } catch (InterruptedException e) {
      e.printStackTrace();
    }
    Set<String> whNow = driver.getWindowHandles();
    Set<String> whThen = (Set<String>) vars.get("window_handles");
    if (whNow.size() > whThen.size()) {
      whNow.removeAll(whThen);
    }
    return whNow.iterator().next();
  }
  @Test
  public void theInternetHerokuSeleniumTestApp() {
    // Test name: TheInternetHerokuSeleniumTestApp
    // Step # | name | target | value | comment
    // 1 | open | / |  | 
    driver.get("http://the-internet.herokuapp.com/");
    // 2 | setWindowSize | 1382x744 |  | 
    driver.manage().window().setSize(new Dimension(1382, 744));
    // 3 | click | linkText=A/B Testing |  | 
    driver.findElement(By.linkText("A/B Testing")).click();
    // 4 | click | css=p |  | 
    driver.findElement(By.cssSelector("p")).click();
    // 5 | verifyTitle | The Internet |  | 
    assertThat(driver.getTitle(), is("The Internet"));
    // 6 | click | css=p |  | 
    driver.findElement(By.cssSelector("p")).click();
    // 7 | click | linkText=Add/Remove Elements |  | 
    driver.findElement(By.linkText("Add/Remove Elements")).click();
    // 8 | assertTitle | The Internet |  | 
    assertThat(driver.getTitle(), is("The Internet"));
    // 9 | click | css=button |  | 
    driver.findElement(By.cssSelector("button")).click();
    // 10 | mouseOver | css=button |  | 
    {
      WebElement element = driver.findElement(By.cssSelector("button"));
      Action builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 11 | mouseOut | css=.example > button |  | 
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Action builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    // 12 | click | css=.example > button |  | 
    driver.findElement(By.cssSelector(".example > button")).click();
    // 13 | mouseOver | css=.example > button |  | 
    {
      WebElement element = driver.findElement(By.cssSelector(".example > button"));
      Action builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 14 | click | css=.example > button |  | 
    driver.findElement(By.cssSelector(".example > button")).click();
    // 15 | click | css=.example > button |  | 
    driver.findElement(By.cssSelector(".example > button")).click();
    // 16 | doubleClick | css=.example > button |  | 
    {
      WebElement element = driver.findElement(By.cssSelector(".example > button"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    // 17 | click | css=.example > button |  | 
    driver.findElement(By.cssSelector(".example > button")).click();
    // 18 | click | css=.example > button |  | 
    driver.findElement(By.cssSelector(".example > button")).click();
    // 19 | click | css=.example > button |  | 
    driver.findElement(By.cssSelector(".example > button")).click();
    // 20 | click | css=.example > button |  | 
    driver.findElement(By.cssSelector(".example > button")).click();
    // 21 | doubleClick | css=.example > button |  | 
    {
      WebElement element = driver.findElement(By.cssSelector(".example > button"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    // 22 | click | css=.example > button |  | 
    driver.findElement(By.cssSelector(".example > button")).click();
    // 23 | click | css=.example > button |  | 
    driver.findElement(By.cssSelector(".example > button")).click();
    // 24 | click | css=.example > button |  | 
    driver.findElement(By.cssSelector(".example > button")).click();
    // 25 | click | css=.example > button |  | 
    driver.findElement(By.cssSelector(".example > button")).click();
    // 26 | click | css=.example > button |  | 
    driver.findElement(By.cssSelector(".example > button")).click();
    // 27 | click | css=.example > button |  | 
    driver.findElement(By.cssSelector(".example > button")).click();
    // 28 | click | css=.example > button |  | 
    driver.findElement(By.cssSelector(".example > button")).click();
    // 29 | click | css=.example > button |  | 
    driver.findElement(By.cssSelector(".example > button")).click();
    // 30 | click | css=.example > button |  | 
    driver.findElement(By.cssSelector(".example > button")).click();
    // 31 | mouseOut | css=.example > button |  | 
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Action builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    // 32 | click | css=.added-manually:nth-child(4) |  | 
    driver.findElement(By.cssSelector(".added-manually:nth-child(4)")).click();
    // 33 | click | css=.added-manually:nth-child(4) |  | 
    driver.findElement(By.cssSelector(".added-manually:nth-child(4)")).click();
    // 34 | doubleClick | css=.added-manually:nth-child(3) |  | 
    {
      WebElement element = driver.findElement(By.cssSelector(".added-manually:nth-child(3)"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    // 35 | click | css=.added-manually:nth-child(4) |  | 
    driver.findElement(By.cssSelector(".added-manually:nth-child(4)")).click();
    // 36 | click | css=.added-manually:nth-child(4) |  | 
    driver.findElement(By.cssSelector(".added-manually:nth-child(4)")).click();
    // 37 | click | css=.added-manually:nth-child(4) |  | 
    driver.findElement(By.cssSelector(".added-manually:nth-child(4)")).click();
    // 38 | click | css=.added-manually:nth-child(4) |  | 
    driver.findElement(By.cssSelector(".added-manually:nth-child(4)")).click();
    // 39 | click | css=.added-manually:nth-child(4) |  | 
    driver.findElement(By.cssSelector(".added-manually:nth-child(4)")).click();
    // 40 | click | css=.added-manually:nth-child(4) |  | 
    driver.findElement(By.cssSelector(".added-manually:nth-child(4)")).click();
    // 41 | click | css=.added-manually:nth-child(4) |  | 
    driver.findElement(By.cssSelector(".added-manually:nth-child(4)")).click();
    // 42 | click | css=.added-manually:nth-child(4) |  | 
    driver.findElement(By.cssSelector(".added-manually:nth-child(4)")).click();
    // 43 | click | css=.added-manually:nth-child(4) |  | 
    driver.findElement(By.cssSelector(".added-manually:nth-child(4)")).click();
    // 44 | click | css=.added-manually:nth-child(4) |  | 
    driver.findElement(By.cssSelector(".added-manually:nth-child(4)")).click();
    // 45 | click | css=.added-manually:nth-child(4) |  | 
    driver.findElement(By.cssSelector(".added-manually:nth-child(4)")).click();
    // 46 | doubleClick | css=.added-manually:nth-child(3) |  | 
    {
      WebElement element = driver.findElement(By.cssSelector(".added-manually:nth-child(3)"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    // 47 | click | css=.added-manually:nth-child(4) |  | 
    driver.findElement(By.cssSelector(".added-manually:nth-child(4)")).click();
    // 48 | click | css=.added-manually:nth-child(3) |  | 
    driver.findElement(By.cssSelector(".added-manually:nth-child(3)")).click();
    // 49 | click | css=.added-manually:nth-child(2) |  | 
    driver.findElement(By.cssSelector(".added-manually:nth-child(2)")).click();
    // 50 | click | css=.added-manually |  | 
    driver.findElement(By.cssSelector(".added-manually")).click();
    // 51 | click | css=button |  | 
    driver.findElement(By.cssSelector("button")).click();
    // 52 | mouseOver | css=button |  | 
    {
      WebElement element = driver.findElement(By.cssSelector("button"));
      Action builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 53 | mouseOut | css=.example > button |  | 
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Action builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    // 54 | click | linkText=Basic Auth |  | 
    driver.findElement(By.linkText("Basic Auth")).click();
    // 55 | click | css=h3 |  | 
    driver.findElement(By.cssSelector("h3")).click();
    // 56 | click | linkText=Broken Images |  | 
    driver.findElement(By.linkText("Broken Images")).click();
    // 57 | mouseOver | css=img:nth-child(3) |  | 
    {
      WebElement element = driver.findElement(By.cssSelector("img:nth-child(3)"));
      Action builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 58 | mouseOver | css=img:nth-child(4) |  | 
    {
      WebElement element = driver.findElement(By.cssSelector("img:nth-child(4)"));
      Action builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 59 | click | linkText=Challenging DOM |  | 
    driver.findElement(By.linkText("Challenging DOM")).click();
    // 60 | click | id=a84e9fa0-932d-0137-8c8c-7a12225e6570 |  | 
    driver.findElement(By.id("a84e9fa0-932d-0137-8c8c-7a12225e6570")).click();
    // 61 | click | id=a996cd70-932d-0137-8ca1-7a12225e6570 |  | 
    driver.findElement(By.id("a996cd70-932d-0137-8ca1-7a12225e6570")).click();
    // 62 | click | id=aabce840-932d-0137-8cca-7a12225e6570 |  | 
    driver.findElement(By.id("aabce840-932d-0137-8cca-7a12225e6570")).click();
    // 63 | click | css=tr:nth-child(3) a:nth-child(1) |  | 
    driver.findElement(By.cssSelector("tr:nth-child(3) a:nth-child(1)")).click();
    // 64 | click | css=tr:nth-child(3) a:nth-child(1) |  | 
    driver.findElement(By.cssSelector("tr:nth-child(3) a:nth-child(1)")).click();
    // 65 | click | css=tr:nth-child(3) a:nth-child(1) |  | 
    driver.findElement(By.cssSelector("tr:nth-child(3) a:nth-child(1)")).click();
    // 66 | click | css=tr:nth-child(3) a:nth-child(2) |  | 
    driver.findElement(By.cssSelector("tr:nth-child(3) a:nth-child(2)")).click();
    // 67 | click | id=abaf7270-932d-0137-8cdc-7a12225e6570 |  | 
    driver.findElement(By.id("abaf7270-932d-0137-8cdc-7a12225e6570")).click();
    // 68 | click | css=tr:nth-child(4) a:nth-child(2) |  | 
    driver.findElement(By.cssSelector("tr:nth-child(4) a:nth-child(2)")).click();
    // 69 | click | css=tr:nth-child(4) a:nth-child(2) |  | 
    driver.findElement(By.cssSelector("tr:nth-child(4) a:nth-child(2)")).click();
    // 70 | click | css=tr:nth-child(4) a:nth-child(2) |  | 
    driver.findElement(By.cssSelector("tr:nth-child(4) a:nth-child(2)")).click();
    // 71 | verifyTitle | The Internet |  | 
    assertThat(driver.getTitle(), is("The Internet"));
    // 72 | click | linkText=Checkboxes |  | 
    driver.findElement(By.linkText("Checkboxes")).click();
    // 73 | click | css=input:nth-child(1) |  | 
    driver.findElement(By.cssSelector("input:nth-child(1)")).click();
    // 74 | click | css=input:nth-child(3) |  | 
    driver.findElement(By.cssSelector("input:nth-child(3)")).click();
    // 75 | click | linkText=Context Menu |  | 
    driver.findElement(By.linkText("Context Menu")).click();
    // 76 | click | id=hot-spot |  | 
    driver.findElement(By.id("hot-spot")).click();
    // 77 | assertAlert | You selected a context menu |  | 
    assertThat(driver.switchTo().alert().getText(), is("You selected a context menu"));
    // 78 | mouseOver | id=hot-spot |  | 
    {
      WebElement element = driver.findElement(By.id("hot-spot"));
      Action builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 79 | assertAlert | You selected a context menu |  | 
    assertThat(driver.switchTo().alert().getText(), is("You selected a context menu"));
    // 80 | click | linkText=Digest Authentication |  | 
    driver.findElement(By.linkText("Digest Authentication")).click();
    // 81 | click | linkText=Digest Authentication |  | 
    driver.findElement(By.linkText("Digest Authentication")).click();
    // 82 | click | linkText=Disappearing Elements |  | 
    driver.findElement(By.linkText("Disappearing Elements")).click();
    // 83 | click | linkText=Home |  | 
    driver.findElement(By.linkText("Home")).click();
    // 84 | click | linkText=Disappearing Elements |  | 
    driver.findElement(By.linkText("Disappearing Elements")).click();
    // 85 | click | linkText=About |  | 
    driver.findElement(By.linkText("About")).click();
    // 86 | verifyText | css=body | Not Found | 
    assertThat(driver.findElement(By.cssSelector("body")).getText(), is("Not Found"));
    // 87 | click | linkText=Contact Us |  | 
    driver.findElement(By.linkText("Contact Us")).click();
    // 88 | verifyText | css=body | Not Found | 
    assertThat(driver.findElement(By.cssSelector("body")).getText(), is("Not Found"));
    // 89 | click | linkText=Portfolio |  | 
    driver.findElement(By.linkText("Portfolio")).click();
    // 90 | verifyText | css=body | Not Found | 
    assertThat(driver.findElement(By.cssSelector("body")).getText(), is("Not Found"));
    // 91 | click | linkText=Gallery |  | 
    driver.findElement(By.linkText("Gallery")).click();
    // 92 | verifyText | css=body | Not Found | 
    assertThat(driver.findElement(By.cssSelector("body")).getText(), is("Not Found"));
    // 93 | click | linkText=Drag and Drop |  | 
    driver.findElement(By.linkText("Drag and Drop")).click();
    // 94 | dragAndDropToObject | id=column-a | id=column-b | 
    {
      WebElement dragged = driver.findElement(By.id("column-a"));
      WebElement dropped = driver.findElement(By.id("column-b"));
      Actions builder = new Actions(driver);
      builder.dragAndDrop(dragged, dropped).perform();
    }
    // 95 | dragAndDropToObject | id=column-b | id=column-a | 
    {
      WebElement dragged = driver.findElement(By.id("column-b"));
      WebElement dropped = driver.findElement(By.id("column-a"));
      Actions builder = new Actions(driver);
      builder.dragAndDrop(dragged, dropped).perform();
    }
    // 96 | click | linkText=Dropdown |  | 
    driver.findElement(By.linkText("Dropdown")).click();
    // 97 | click | id=dropdown |  | 
    driver.findElement(By.id("dropdown")).click();
    // 98 | select | id=dropdown | label=Option 1 | 
    {
      WebElement dropdown = driver.findElement(By.id("dropdown"));
      dropdown.findElement(By.xpath("//option[. = 'Option 1']")).click();
    }
    // 99 | click | id=dropdown |  | 
    driver.findElement(By.id("dropdown")).click();
    // 100 | click | id=dropdown |  | 
    driver.findElement(By.id("dropdown")).click();
    // 101 | select | id=dropdown | label=Option 2 | 
    {
      WebElement dropdown = driver.findElement(By.id("dropdown"));
      dropdown.findElement(By.xpath("//option[. = 'Option 2']")).click();
    }
    // 102 | click | id=dropdown |  | 
    driver.findElement(By.id("dropdown")).click();
    // 103 | click | linkText=Dynamic Content |  | 
    driver.findElement(By.linkText("Dynamic Content")).click();
    // 104 | click | linkText=click here |  | 
    driver.findElement(By.linkText("click here")).click();
    // 105 | click | linkText=click here |  | 
    driver.findElement(By.linkText("click here")).click();
    // 106 | assertText | css=.row:nth-child(7) > .large-10:nth-child(2) | Vel nesciunt hic rerum doloribus enim earum sequi consequatur repellat quos dignissimos iusto nihil quam animi voluptatem ipsa blanditiis rerum non expedita maiores voluptatem quis doloremque rem corrupti deserunt culpa tenetur. | 
    assertThat(driver.findElement(By.cssSelector(".row:nth-child(7) > .large-10:nth-child(2)")).getText(), is("Vel nesciunt hic rerum doloribus enim earum sequi consequatur repellat quos dignissimos iusto nihil quam animi voluptatem ipsa blanditiis rerum non expedita maiores voluptatem quis doloremque rem corrupti deserunt culpa tenetur."));
    // 107 | verifyText | css=.row:nth-child(1) > .large-10 | Accusantium eius ut architecto neque vel voluptatem vel nam eos minus ullam dolores voluptates enim sed voluptatem rerum qui sapiente nesciunt aspernatur et accusamus laboriosam culpa tenetur hic aut placeat error autem qui sunt. | 
    assertThat(driver.findElement(By.cssSelector(".row:nth-child(1) > .large-10")).getText(), is("Accusantium eius ut architecto neque vel voluptatem vel nam eos minus ullam dolores voluptates enim sed voluptatem rerum qui sapiente nesciunt aspernatur et accusamus laboriosam culpa tenetur hic aut placeat error autem qui sunt."));
    // 108 | click | linkText=Dynamic Controls |  | 
    driver.findElement(By.linkText("Dynamic Controls")).click();
    // 109 | click | id=checkbox |  | 
    driver.findElement(By.id("checkbox")).click();
    // 110 | click | css=#checkbox > input |  | 
    driver.findElement(By.cssSelector("#checkbox > input")).click();
    // 111 | click | css=#checkbox-example > button |  | 
    driver.findElement(By.cssSelector("#checkbox-example > button")).click();
    // 112 | click | css=button:nth-child(1) |  | 
    driver.findElement(By.cssSelector("button:nth-child(1)")).click();
    // 113 | mouseOver | css=button:nth-child(1) |  | 
    {
      WebElement element = driver.findElement(By.cssSelector("button:nth-child(1)"));
      Action builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 114 | click | css=button:nth-child(2) |  | 
    driver.findElement(By.cssSelector("button:nth-child(2)")).click();
    // 115 | mouseOver | css=button:nth-child(2) |  | 
    {
      WebElement element = driver.findElement(By.cssSelector("button:nth-child(2)"));
      Action builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 116 | click | css=#input-example > input |  | 
    driver.findElement(By.cssSelector("#input-example > input")).click();
    // 117 | click | css=#input-example > input |  | 
    driver.findElement(By.cssSelector("#input-example > input")).click();
    // 118 | type | css=#input-example > input | Crack your Selenium Interview | 
    driver.findElement(By.cssSelector("#input-example > input")).sendKeys("Crack your Selenium Interview");
    // 119 | click | id=input-example |  | 
    driver.findElement(By.id("input-example")).click();
    // 120 | click | css=button:nth-child(2) |  | 
    driver.findElement(By.cssSelector("button:nth-child(2)")).click();
    // 121 | mouseOver | css=button:nth-child(2) |  | 
    {
      WebElement element = driver.findElement(By.cssSelector("button:nth-child(2)"));
      Action builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 122 | click | css=button:nth-child(2) |  | 
    driver.findElement(By.cssSelector("button:nth-child(2)")).click();
    // 123 | mouseOver | css=button:nth-child(2) |  | 
    {
      WebElement element = driver.findElement(By.cssSelector("button:nth-child(2)"));
      Action builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 124 | click | linkText=Dynamic Loading |  | 
    driver.findElement(By.linkText("Dynamic Loading")).click();
    // 125 | click | linkText=Example 1: Element on page that is hidden |  | 
    driver.findElement(By.linkText("Example 1: Element on page that is hidden")).click();
    // 126 | click | css=button |  | 
    driver.findElement(By.cssSelector("button")).click();
    // 127 | click | css=h4:nth-child(1) |  | 
    driver.findElement(By.cssSelector("h4:nth-child(1)")).click();
    // 128 | click | css=h4:nth-child(1) |  | 
    driver.findElement(By.cssSelector("h4:nth-child(1)")).click();
    // 129 | click | linkText=Example 2: Element rendered after the fact |  | 
    driver.findElement(By.linkText("Example 2: Element rendered after the fact")).click();
    // 130 | click | css=button |  | 
    driver.findElement(By.cssSelector("button")).click();
    // 131 | assertText | css=h4:nth-child(1) | Hello World! | 
    assertThat(driver.findElement(By.cssSelector("h4:nth-child(1)")).getText(), is("Hello World!"));
    // 132 | verifyText | css=h4:nth-child(1) | Hello World! | 
    assertThat(driver.findElement(By.cssSelector("h4:nth-child(1)")).getText(), is("Hello World!"));
    // 133 | click | linkText=Entry Ad |  | 
    driver.findElement(By.linkText("Entry Ad")).click();
    // 134 | verifyText | css=.modal-title | THIS IS A MODAL WINDOW | 
    assertThat(driver.findElement(By.cssSelector(".modal-title")).getText(), is("THIS IS A MODAL WINDOW"));
    // 135 | click | css=.modal-footer > p |  | 
    driver.findElement(By.cssSelector(".modal-footer > p")).click();
    // 136 | click | id=restart-ad |  | 
    driver.findElement(By.id("restart-ad")).click();
    // 137 | click | css=.modal-footer > p |  | 
    driver.findElement(By.cssSelector(".modal-footer > p")).click();
    // 138 | click | linkText=Exit Intent |  | 
    driver.findElement(By.linkText("Exit Intent")).click();
    // 139 | verifyText | css=p:nth-child(2) | Mouse out of the viewport pane and see a modal window appear. | 
    assertThat(driver.findElement(By.cssSelector("p:nth-child(2)")).getText(), is("Mouse out of the viewport pane and see a modal window appear."));
    // 140 | verifyText | css=.modal | THIS IS A MODAL WINDOW\nIt's commonly used to encourage a user to take an action (e.g., give their e-mail address to sign up for something).\nClose | 
    assertThat(driver.findElement(By.cssSelector(".modal")).getText(), is("THIS IS A MODAL WINDOW\nIt\\'s commonly used to encourage a user to take an action (e.g., give their e-mail address to sign up for something).\nClose"));
    // 141 | click | css=.modal-footer > p |  | 
    driver.findElement(By.cssSelector(".modal-footer > p")).click();
    // 142 | click | linkText=File Download |  | 
    driver.findElement(By.linkText("File Download")).click();
    // 143 | click | linkText=some-file.txt |  | 
    driver.findElement(By.linkText("some-file.txt")).click();
    // 144 | click | linkText=simple.txt |  | 
    driver.findElement(By.linkText("simple.txt")).click();
    // 145 | click | linkText=simple.txt |  | 
    driver.findElement(By.linkText("simple.txt")).click();
    // 146 | storeText | linkText=some-file.txt | test | 
    vars.put("test", driver.findElement(By.linkText("some-file.txt")).getText());
    // 147 | click | linkText=File Upload |  | 
    driver.findElement(By.linkText("File Upload")).click();
    // 148 | click | id=file-upload |  | 
    driver.findElement(By.id("file-upload")).click();
    // 149 | type | id=file-upload | C:\fakepath\simple.txt | 
    driver.findElement(By.id("file-upload")).sendKeys("C:\fakepath\simple.txt");
    // 150 | click | id=file-submit |  | 
    driver.findElement(By.id("file-submit")).click();
    // 151 | assertText | id=uploaded-files | simple.txt | 
    assertThat(driver.findElement(By.id("uploaded-files")).getText(), is("simple.txt"));
    // 152 | click | linkText=Floating Menu |  | 
    driver.findElement(By.linkText("Floating Menu")).click();
    // 153 | mouseOver | linkText=Home |  | 
    {
      WebElement element = driver.findElement(By.linkText("Home"));
      Action builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 154 | click | linkText=Home |  | 
    driver.findElement(By.linkText("Home")).click();
    // 155 | click | linkText=News |  | 
    driver.findElement(By.linkText("News")).click();
    // 156 | mouseOver | linkText=News |  | 
    {
      WebElement element = driver.findElement(By.linkText("News"));
      Action builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 157 | click | linkText=About |  | 
    driver.findElement(By.linkText("About")).click();
    // 158 | click | linkText=About |  | 
    driver.findElement(By.linkText("About")).click();
    // 159 | click | css=p:nth-child(4) |  | 
    driver.findElement(By.cssSelector("p:nth-child(4)")).click();
    // 160 | click | linkText=Forgot Password |  | 
    driver.findElement(By.linkText("Forgot Password")).click();
    // 161 | click | css=label |  | 
    driver.findElement(By.cssSelector("label")).click();
    // 162 | click | css=label |  | 
    driver.findElement(By.cssSelector("label")).click();
    // 163 | type | id=email | a@b.c | 
    driver.findElement(By.id("email")).sendKeys("a@b.c");
    // 164 | click | css=.icon-2x |  | 
    driver.findElement(By.cssSelector(".icon-2x")).click();
    // 165 | click | linkText=Form Authentication |  | 
    driver.findElement(By.linkText("Form Authentication")).click();
    // 166 | click | id=username |  | 
    driver.findElement(By.id("username")).click();
    // 167 | type | id=username | tomsmith | 
    driver.findElement(By.id("username")).sendKeys("tomsmith");
    // 168 | type | id=password | SuperSecretPassword! | 
    driver.findElement(By.id("password")).sendKeys("SuperSecretPassword!");
    // 169 | click | css=.fa |  | 
    driver.findElement(By.cssSelector(".fa")).click();
    // 170 | click | linkText=Logout |  | 
    driver.findElement(By.linkText("Logout")).click();
    // 171 | click | id=password |  | 
    driver.findElement(By.id("password")).click();
    // 172 | type | id=password | SuperSecretPassword!2 | 
    driver.findElement(By.id("password")).sendKeys("SuperSecretPassword!2");
    // 173 | click | css=.fa |  | 
    driver.findElement(By.cssSelector(".fa")).click();
    // 174 | click | linkText=Frames |  | 
    driver.findElement(By.linkText("Frames")).click();
    // 175 | mouseDownAt | linkText=Nested Frames | 84,6.109375 | 
    {
      WebElement element = driver.findElement(By.linkText("Nested Frames"));
      Action builder = new Actions(driver);
      builder.moveToElement(element).clickAndHold().perform();
    }
    // 176 | mouseMoveAt | linkText=Nested Frames | 84,6.109375 | 
    {
      WebElement element = driver.findElement(By.linkText("Nested Frames"));
      Action builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 177 | mouseUpAt | linkText=Nested Frames | 84,6.109375 | 
    {
      WebElement element = driver.findElement(By.linkText("Nested Frames"));
      Action builder = new Actions(driver);
      builder.moveToElement(element).release().perform();
    }
    // 178 | click | linkText=Nested Frames |  | 
    driver.findElement(By.linkText("Nested Frames")).click();
    // 179 | selectFrame | index=0 |  | 
    driver.switchTo().frame(0);
    // 180 | selectFrame | index=0 |  | 
    driver.switchTo().frame(0);
    // 181 | click | css=body |  | 
    driver.findElement(By.cssSelector("body")).click();
    // 182 | selectFrame | relative=parent |  | 
    driver.switchTo().defaultContent();
    // 183 | selectFrame | index=1 |  | 
    driver.switchTo().frame(1);
    // 184 | click | css=body |  | 
    driver.findElement(By.cssSelector("body")).click();
    // 185 | selectFrame | relative=parent |  | 
    driver.switchTo().defaultContent();
    // 186 | selectFrame | index=2 |  | 
    driver.switchTo().frame(2);
    // 187 | click | css=body |  | 
    driver.findElement(By.cssSelector("body")).click();
    // 188 | selectFrame | relative=parent |  | 
    driver.switchTo().defaultContent();
    // 189 | selectFrame | relative=parent |  | 
    driver.switchTo().defaultContent();
    // 190 | selectFrame | index=1 |  | 
    driver.switchTo().frame(1);
    // 191 | click | css=body |  | 
    driver.findElement(By.cssSelector("body")).click();
    // 192 | selectFrame | relative=parent |  | 
    driver.switchTo().defaultContent();
    // 193 | selectFrame | index=0 |  | 
    driver.switchTo().frame(0);
    // 194 | selectFrame | index=1 |  | 
    driver.switchTo().frame(1);
    // 195 | click | css=body |  | 
    driver.findElement(By.cssSelector("body")).click();
    // 196 | click | css=body |  | 
    driver.findElement(By.cssSelector("body")).click();
    // 197 | click | css=body |  | 
    driver.findElement(By.cssSelector("body")).click();
    // 198 | click | css=body |  | 
    driver.findElement(By.cssSelector("body")).click();
    // 199 | verifyTitle |  |  | 
    assertThat(driver.getTitle(), is("undefined"));
    // 200 | selectFrame | relative=parent |  | 
    driver.switchTo().defaultContent();
    // 201 | selectFrame | relative=parent |  | 
    driver.switchTo().defaultContent();
    // 202 | click | linkText=iFrame |  | 
    driver.findElement(By.linkText("iFrame")).click();
    // 203 | click | css=#mceu_15-open > span |  | 
    driver.findElement(By.cssSelector("#mceu_15-open > span")).click();
    // 204 | click | id=mceu_32 |  | 
    driver.findElement(By.id("mceu_32")).click();
    // 205 | mouseOver | id=mceu_15-open |  | 
    {
      WebElement element = driver.findElement(By.id("mceu_15-open"));
      Action builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 206 | mouseOver | css=#mceu_1 > button |  | 
    {
      WebElement element = driver.findElement(By.cssSelector("#mceu_1 > button"));
      Action builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 207 | mouseOut | css=#mceu_1 > button |  | 
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Action builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    // 208 | click | css=#mceu_16-open > span |  | 
    driver.findElement(By.cssSelector("#mceu_16-open > span")).click();
    // 209 | selectFrame | index=0 |  | 
    driver.switchTo().frame(0);
    // 210 | editContent | id=tinymce | <p><br data-mce-bogus="1"></p> | 
    {
      WebElement element = driver.findElement(By.id("tinymce"));
      js.executeScript("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<p><br data-mce-bogus=\"1\"></p>'}", element);
    }
    // 211 | click | css=html |  | 
    driver.findElement(By.cssSelector("html")).click();
    // 212 | selectFrame | relative=parent |  | 
    driver.switchTo().defaultContent();
    // 213 | click | id=mceu_15-open |  | 
    driver.findElement(By.id("mceu_15-open")).click();
    // 214 | selectFrame | index=0 |  | 
    driver.switchTo().frame(0);
    // 215 | editContent | id=tinymce | <p>Cracking Your Selenium Interview</p> | 
    {
      WebElement element = driver.findElement(By.id("tinymce"));
      js.executeScript("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<p>Cracking Your Selenium Interview</p>'}", element);
    }
    // 216 | selectFrame | relative=parent |  | 
    driver.switchTo().defaultContent();
    // 217 | mouseOver | id=mceu_16-open |  | 
    {
      WebElement element = driver.findElement(By.id("mceu_16-open"));
      Action builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 218 | selectFrame | index=0 |  | 
    driver.switchTo().frame(0);
    // 219 | click | css=html |  | 
    driver.findElement(By.cssSelector("html")).click();
    // 220 | selectFrame | relative=parent |  | 
    driver.switchTo().defaultContent();
    // 221 | click | css=#mceu_18-open > span |  | 
    driver.findElement(By.cssSelector("#mceu_18-open > span")).click();
    // 222 | click | id=mceu_48-text |  | 
    driver.findElement(By.id("mceu_48-text")).click();
    // 223 | selectFrame | index=0 |  | 
    driver.switchTo().frame(0);
    // 224 | click | css=html |  | 
    driver.findElement(By.cssSelector("html")).click();
    // 225 | selectFrame | relative=parent |  | 
    driver.switchTo().defaultContent();
    // 226 | click | css=button > .mce-i-bold |  | 
    driver.findElement(By.cssSelector("button > .mce-i-bold")).click();
    // 227 | mouseOver | css=button > .mce-i-bold |  | 
    {
      WebElement element = driver.findElement(By.cssSelector("button > .mce-i-bold"));
      Action builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 228 | mouseOut | css=button > .mce-i-bold |  | 
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Action builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    // 229 | click | css=button > .mce-i-italic |  | 
    driver.findElement(By.cssSelector("button > .mce-i-italic")).click();
    // 230 | click | css=#mceu_2-open > span |  | 
    driver.findElement(By.cssSelector("#mceu_2-open > span")).click();
    // 231 | mouseOver | css=#mceu_2-open > span |  | 
    {
      WebElement element = driver.findElement(By.cssSelector("#mceu_2-open > span"));
      Action builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 232 | mouseOut | css=#mceu_2-open > span |  | 
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Action builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    // 233 | click | id=mceu_62 |  | 
    driver.findElement(By.id("mceu_62")).click();
    // 234 | selectFrame | index=0 |  | 
    driver.switchTo().frame(0);
    // 235 | editContent | id=tinymce | <p><em><strong>Cracking Your Selenium Interview</strong></em></p> | 
    {
      WebElement element = driver.findElement(By.id("tinymce"));
      js.executeScript("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<p><em><strong>Cracking Your Selenium Interview</strong></em></p>'}", element);
    }
    // 236 | editContent | id=tinymce | <h1><em><strong>Cracking Your Selenium Interview</strong></em></h1> | 
    {
      WebElement element = driver.findElement(By.id("tinymce"));
      js.executeScript("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<h1><em><strong>Cracking Your Selenium Interview</strong></em></h1>'}", element);
    }
    // 237 | selectFrame | relative=parent |  | 
    driver.switchTo().defaultContent();
    // 238 | click | css=html |  | 
    driver.findElement(By.cssSelector("html")).click();
    // 239 | click | css=body |  | 
    driver.findElement(By.cssSelector("body")).click();
    // 240 | click | linkText=Geolocation |  | 
    driver.findElement(By.linkText("Geolocation")).click();
    // 241 | click | css=button |  | 
    driver.findElement(By.cssSelector("button")).click();
    // 242 | click | css=button |  | 
    driver.findElement(By.cssSelector("button")).click();
    // 243 | click | css=.example |  | 
    driver.findElement(By.cssSelector(".example")).click();
    // 244 | verifyTitle | The Internet |  | 
    assertThat(driver.getTitle(), is("The Internet"));
    // 245 | click | css=button |  | 
    driver.findElement(By.cssSelector("button")).click();
    // 246 | click | linkText=Horizontal Slider |  | 
    driver.findElement(By.linkText("Horizontal Slider")).click();
    // 247 | type | css=input | 0.5 | 
    driver.findElement(By.cssSelector("input")).sendKeys("0.5");
    // 248 | click | css=input |  | 
    driver.findElement(By.cssSelector("input")).click();
    // 249 | type | css=input | 1.5 | 
    driver.findElement(By.cssSelector("input")).sendKeys("1.5");
    // 250 | click | css=input |  | 
    driver.findElement(By.cssSelector("input")).click();
    // 251 | type | css=input | 2.5 | 
    driver.findElement(By.cssSelector("input")).sendKeys("2.5");
    // 252 | click | css=input |  | 
    driver.findElement(By.cssSelector("input")).click();
    // 253 | type | css=input | 3 | 
    driver.findElement(By.cssSelector("input")).sendKeys("3");
    // 254 | click | css=input |  | 
    driver.findElement(By.cssSelector("input")).click();
    // 255 | type | css=input | 5 | 
    driver.findElement(By.cssSelector("input")).sendKeys("5");
    // 256 | click | css=input |  | 
    driver.findElement(By.cssSelector("input")).click();
    // 257 | click | linkText=Hovers |  | 
    driver.findElement(By.linkText("Hovers")).click();
    // 258 | click | css=.figure:nth-child(4) > img |  | 
    driver.findElement(By.cssSelector(".figure:nth-child(4) > img")).click();
    // 259 | click | linkText=View profile |  | 
    driver.findElement(By.linkText("View profile")).click();
    // 260 | click | linkText=View profile |  | 
    driver.findElement(By.linkText("View profile")).click();
    // 261 | click | linkText=Infinite Scroll |  | 
    driver.findElement(By.linkText("Infinite Scroll")).click();
    // 262 | runScript | window.scrollTo(0,305) |  | 
    js.executeScript("window.scrollTo(0,305)");
    // 263 | runScript | window.scrollTo(0,1146) |  | 
    js.executeScript("window.scrollTo(0,1146)");
    // 264 | runScript | window.scrollTo(0,1566) |  | 
    js.executeScript("window.scrollTo(0,1566)");
    // 265 | runScript | window.scrollTo(0,1943) |  | 
    js.executeScript("window.scrollTo(0,1943)");
    // 266 | runScript | window.scrollTo(0,2345) |  | 
    js.executeScript("window.scrollTo(0,2345)");
    // 267 | runScript | window.scrollTo(0,3171) |  | 
    js.executeScript("window.scrollTo(0,3171)");
    // 268 | runScript | window.scrollTo(0,3565) |  | 
    js.executeScript("window.scrollTo(0,3565)");
    // 269 | runScript | window.scrollTo(0,4374) |  | 
    js.executeScript("window.scrollTo(0,4374)");
    // 270 | runScript | window.scrollTo(0,5201) |  | 
    js.executeScript("window.scrollTo(0,5201)");
    // 271 | runScript | window.scrollTo(0,5594) |  | 
    js.executeScript("window.scrollTo(0,5594)");
    // 272 | click | linkText=Inputs |  | 
    driver.findElement(By.linkText("Inputs")).click();
    // 273 | click | css=input |  | 
    driver.findElement(By.cssSelector("input")).click();
    // 274 | click | css=input |  | 
    driver.findElement(By.cssSelector("input")).click();
    // 275 | type | css=input | 1 | 
    driver.findElement(By.cssSelector("input")).sendKeys("1");
    // 276 | click | css=input |  | 
    driver.findElement(By.cssSelector("input")).click();
    // 277 | type | css=input | 0 | 
    driver.findElement(By.cssSelector("input")).sendKeys("0");
    // 278 | click | css=input |  | 
    driver.findElement(By.cssSelector("input")).click();
    // 279 | type | css=input | 1 | 
    driver.findElement(By.cssSelector("input")).sendKeys("1");
    // 280 | click | css=input |  | 
    driver.findElement(By.cssSelector("input")).click();
    // 281 | type | css=input | 2 | 
    driver.findElement(By.cssSelector("input")).sendKeys("2");
    // 282 | click | css=input |  | 
    driver.findElement(By.cssSelector("input")).click();
    // 283 | doubleClick | css=input |  | 
    {
      WebElement element = driver.findElement(By.cssSelector("input"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    // 284 | type | css=input | 3 | 
    driver.findElement(By.cssSelector("input")).sendKeys("3");
    // 285 | click | css=input |  | 
    driver.findElement(By.cssSelector("input")).click();
    // 286 | type | css=input | 17486328746298743290790 | 
    driver.findElement(By.cssSelector("input")).sendKeys("17486328746298743290790");
    // 287 | type | css=input | 1.74863287462987432e+22 | 
    driver.findElement(By.cssSelector("input")).sendKeys("1.74863287462987432e+22");
    // 288 | click | css=input |  | 
    driver.findElement(By.cssSelector("input")).click();
    // 289 | click | css=input |  | 
    driver.findElement(By.cssSelector("input")).click();
    // 290 | doubleClick | css=input |  | 
    {
      WebElement element = driver.findElement(By.cssSelector("input"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    // 291 | click | css=input |  | 
    driver.findElement(By.cssSelector("input")).click();
    // 292 | click | css=input |  | 
    driver.findElement(By.cssSelector("input")).click();
    // 293 | click | css=input |  | 
    driver.findElement(By.cssSelector("input")).click();
    // 294 | click | css=input |  | 
    driver.findElement(By.cssSelector("input")).click();
    // 295 | click | css=input |  | 
    driver.findElement(By.cssSelector("input")).click();
    // 296 | doubleClick | css=input |  | 
    {
      WebElement element = driver.findElement(By.cssSelector("input"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    // 297 | click | css=input |  | 
    driver.findElement(By.cssSelector("input")).click();
    // 298 | click | css=input |  | 
    driver.findElement(By.cssSelector("input")).click();
    // 299 | click | linkText=JQuery UI Menus |  | 
    driver.findElement(By.linkText("JQuery UI Menus")).click();
    // 300 | click | id=ui-id-1 |  | 
    driver.findElement(By.id("ui-id-1")).click();
    // 301 | click | css=.large-4 |  | 
    driver.findElement(By.cssSelector(".large-4")).click();
    // 302 | click | id=ui-id-5 |  | 
    driver.findElement(By.id("ui-id-5")).click();
    // 303 | click | linkText=Menu |  | 
    driver.findElement(By.linkText("Menu")).click();
    // 304 | click | linkText=JavaScript Alerts |  | 
    driver.findElement(By.linkText("JavaScript Alerts")).click();
    // 305 | click | css=li:nth-child(1) > button |  | 
    driver.findElement(By.cssSelector("li:nth-child(1) > button")).click();
    // 306 | assertAlert | I am a JS Alert |  | 
    assertThat(driver.switchTo().alert().getText(), is("I am a JS Alert"));
    // 307 | chooseCancelOnNextConfirmation |  |  | 
    // 308 | click | css=li:nth-child(2) > button |  | 
    driver.findElement(By.cssSelector("li:nth-child(2) > button")).click();
    // 309 | assertConfirmation | I am a JS Confirm |  | 
    assertThat(driver.switchTo().alert().getText(), is("I am a JS Confirm"));
    // 310 | webdriverChooseCancelOnVisibleConfirmation |  |  | 
    driver.switchTo().alert().dismiss();
    // 311 | chooseOkOnNextConfirmation |  |  | 
    // 312 | click | css=li:nth-child(2) > button |  | 
    driver.findElement(By.cssSelector("li:nth-child(2) > button")).click();
    // 313 | assertConfirmation | I am a JS Confirm |  | 
    assertThat(driver.switchTo().alert().getText(), is("I am a JS Confirm"));
    // 314 | webdriverChooseOkOnVisibleConfirmation |  |  | 
    driver.switchTo().alert().accept();
    // 315 | answerOnNextPrompt | Hello World  |  | 
    // 316 | click | css=li:nth-child(3) > button |  | 
    driver.findElement(By.cssSelector("li:nth-child(3) > button")).click();
    // 317 | assertPrompt | I am a JS prompt |  | 
    assertThat(driver.switchTo().alert().getText(), is("I am a JS prompt"));
    // 318 | webdriverAnswerOnVisiblePrompt | Hello World  |  | 
    {
      Alert alert = driver.switchTo().alert();
      alert.sendKeys("Hello World ")
      alert.accept();
    }
    // 319 | answerOnNextPrompt | Cracking Selenium Interview |  | 
    // 320 | click | css=li:nth-child(3) > button |  | 
    driver.findElement(By.cssSelector("li:nth-child(3) > button")).click();
    // 321 | assertPrompt | I am a JS prompt |  | 
    assertThat(driver.switchTo().alert().getText(), is("I am a JS prompt"));
    // 322 | webdriverAnswerOnVisiblePrompt | Cracking Selenium Interview |  | 
    {
      Alert alert = driver.switchTo().alert();
      alert.sendKeys("Cracking Selenium Interview")
      alert.accept();
    }
    // 323 | click | linkText=JavaScript onload event error |  | 
    driver.findElement(By.linkText("JavaScript onload event error")).click();
    // 324 | click | css=p |  | 
    driver.findElement(By.cssSelector("p")).click();
    // 325 | click | css=html |  | 
    driver.findElement(By.cssSelector("html")).click();
    // 326 | click | linkText=Key Presses |  | 
    driver.findElement(By.linkText("Key Presses")).click();
    // 327 | click | id=target |  | 
    driver.findElement(By.id("target")).click();
    // 328 | click | id=target |  | 
    driver.findElement(By.id("target")).click();
    // 329 | sendKeys | id=target | ${KEY_ENTER} | 
    driver.findElement(By.id("target")).sendKeys(Keys.ENTER);
    // 330 | click | css=html |  | 
    driver.findElement(By.cssSelector("html")).click();
    // 331 | click | css=html |  | 
    driver.findElement(By.cssSelector("html")).click();
    // 332 | click | css=html |  | 
    driver.findElement(By.cssSelector("html")).click();
    // 333 | click | linkText=Large & Deep DOM |  | 
    driver.findElement(By.linkText("Large & Deep DOM")).click();
    // 334 | storeText | id=sibling-10.3 | NestedDomExample | 
    vars.put("NestedDomExample", driver.findElement(By.id("sibling-10.3")).getText());
    // 335 | storeText | id=no-siblings | NoSiblingDom | 
    vars.put("NoSiblingDom", driver.findElement(By.id("no-siblings")).getText());
    // 336 | storeText | css=.row-9 > .column-8 | TableElementDom | 
    vars.put("TableElementDom", driver.findElement(By.cssSelector(".row-9 > .column-8")).getText());
    // 337 | assertText | id=header-2 | 2 | 
    assertThat(driver.findElement(By.id("header-2")).getText(), is("2"));
    // 338 | click | linkText=Multiple Windows |  | 
    driver.findElement(By.linkText("Multiple Windows")).click();
    // 339 | click | linkText=Click Here |  | 
    vars.put("window_handles", driver.getWindowHandles());
    // 340 | storeWindowHandle | root |  | 
    driver.findElement(By.linkText("Click Here")).click();
    // 341 | selectWindow | handle=${win1036} |  | 
    vars.put("win1036", waitForWindow(2000));
    // 342 | close |  |  | 
    vars.put("root", driver.getWindowHandle());
    // 343 | selectWindow | handle=${root} |  | 
    driver.switchTo().window(vars.get("win1036").toString());
    // 344 | click | linkText=Click Here |  | 
    driver.close();
    // 345 | selectWindow | handle=${win137} |  | 
    driver.switchTo().window(vars.get("root").toString());
    // 346 | close |  |  | 
    vars.put("window_handles", driver.getWindowHandles());
    // 347 | selectWindow | handle=${root} |  | 
    driver.findElement(By.linkText("Click Here")).click();
    // 348 | click | linkText=Nested Frames |  | 
    vars.put("win137", waitForWindow(2000));
    // 349 | click | linkText=Notification Messages |  | 
    driver.switchTo().window(vars.get("win137").toString());
    // 350 | click | linkText=Click here |  | 
    driver.close();
    // 351 | click | linkText=Click here |  | 
    driver.switchTo().window(vars.get("root").toString());
    // 352 | verifyText | id=flash | Action successful\n× | 
    driver.findElement(By.linkText("Nested Frames")).click();
    // 353 | click | linkText=Click here |  | 
    driver.findElement(By.linkText("Notification Messages")).click();
    // 354 | click | linkText=Redirect Link |  | 
    driver.findElement(By.linkText("Click here")).click();
    // 355 | assertText | id=redirect | here | 
    driver.findElement(By.linkText("Click here")).click();
    // 356 | click | id=redirect |  | 
    assertThat(driver.findElement(By.id("flash")).getText(), is("Action successful\n×"));
    // 357 | click | linkText=200 |  | 
    driver.findElement(By.linkText("Click here")).click();
    // 358 | click | linkText=here |  | 
    driver.findElement(By.linkText("Redirect Link")).click();
    // 359 | click | linkText=301 |  | 
    assertThat(driver.findElement(By.id("redirect")).getText(), is("here"));
    // 360 | click | linkText=here |  | 
    driver.findElement(By.id("redirect")).click();
    // 361 | click | linkText=404 |  | 
    driver.findElement(By.linkText("200")).click();
    // 362 | click | linkText=here |  | 
    driver.findElement(By.linkText("here")).click();
    // 363 | click | linkText=500 |  | 
    driver.findElement(By.linkText("301")).click();
    // 364 | click | linkText=here |  | 
    driver.findElement(By.linkText("here")).click();
    // 365 | assertText | css=p:nth-child(2) | HTTP status codes are a standard set of numbers used to communicate from a web server to your browser to indicate the outcome of the request being made (e.g. Success, Redirection, Client Error, Server Error). For a complete list of status codes, go here.\n\nSome standard status codes you will run into include but are not limited to: | 
    driver.findElement(By.linkText("404")).click();
    // 366 | click | linkText=Secure File Download |  | 
    driver.findElement(By.linkText("here")).click();
    // 367 | click | linkText=some-file.txt |  | 
    driver.findElement(By.linkText("500")).click();
    // 368 | click | linkText=Shifting Content |  | 
    driver.findElement(By.linkText("here")).click();
    // 369 | click | linkText=Example 1: Menu Element |  | 
    assertThat(driver.findElement(By.cssSelector("p:nth-child(2)")).getText(), is("HTTP status codes are a standard set of numbers used to communicate from a web server to your browser to indicate the outcome of the request being made (e.g. Success, Redirection, Client Error, Server Error). For a complete list of status codes, go here.\n\nSome standard status codes you will run into include but are not limited to:"));
    // 370 | click | linkText=Contact Us |  | 
    driver.findElement(By.linkText("Secure File Download")).click();
    // 371 | click | linkText=click here |  | 
    driver.findElement(By.linkText("some-file.txt")).click();
    // 372 | click | css=p:nth-child(4) > a |  | 
    driver.findElement(By.linkText("Shifting Content")).click();
    // 373 | click | css=p:nth-child(5) > a |  | 
    driver.findElement(By.linkText("Example 1: Menu Element")).click();
    // 374 | click | css=p:nth-child(4) > a |  | 
    driver.findElement(By.linkText("Contact Us")).click();
    // 375 | click | css=p:nth-child(5) > a |  | 
    driver.findElement(By.linkText("click here")).click();
    // 376 | click | linkText=Example 2: An image |  | 
    driver.findElement(By.cssSelector("p:nth-child(4) > a")).click();
    // 377 | click | css=p:nth-child(6) > a |  | 
    driver.findElement(By.cssSelector("p:nth-child(5) > a")).click();
    // 378 | click | css=p:nth-child(5) > a |  | 
    driver.findElement(By.cssSelector("p:nth-child(4) > a")).click();
    // 379 | click | css=p:nth-child(4) > a |  | 
    driver.findElement(By.cssSelector("p:nth-child(5) > a")).click();
    // 380 | click | css=p:nth-child(4) > a |  | 
    driver.findElement(By.linkText("Example 2: An image")).click();
    // 381 | doubleClick | css=p:nth-child(4) > a |  | 
    driver.findElement(By.cssSelector("p:nth-child(6) > a")).click();
    // 382 | click | linkText=click here |  | 
    driver.findElement(By.cssSelector("p:nth-child(5) > a")).click();
    // 383 | click | linkText=Example 3: List |  | 
    driver.findElement(By.cssSelector("p:nth-child(4) > a")).click();
    // 384 | click | css=.large-6 |  | 
    driver.findElement(By.cssSelector("p:nth-child(4) > a")).click();
    // 385 | click | css=.large-6 |  | 
    {
      WebElement element = driver.findElement(By.cssSelector("p:nth-child(4) > a"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    // 386 | click | css=.large-6 |  | 
    driver.findElement(By.linkText("click here")).click();
    // 387 | click | css=.large-6 |  | 
    driver.findElement(By.linkText("Example 3: List")).click();
    // 388 | click | css=.large-6 |  | 
    driver.findElement(By.cssSelector(".large-6")).click();
    // 389 | click | css=.large-6 |  | 
    driver.findElement(By.cssSelector(".large-6")).click();
    // 390 | click | css=.large-6 |  | 
    driver.findElement(By.cssSelector(".large-6")).click();
    // 391 | click | css=.large-6 |  | 
    driver.findElement(By.cssSelector(".large-6")).click();
    // 392 | click | css=.row:nth-child(6) |  | 
    driver.findElement(By.cssSelector(".large-6")).click();
    // 393 | click | css=.row:nth-child(6) |  | 
    driver.findElement(By.cssSelector(".large-6")).click();
    // 394 | click | css=body |  | 
    driver.findElement(By.cssSelector(".large-6")).click();
    // 395 | click | linkText=Slow Resources |  | 
    driver.findElement(By.cssSelector(".large-6")).click();
    // 396 | click | id=content |  | 
    driver.findElement(By.cssSelector(".row:nth-child(6)")).click();
    // 397 | verifyText | css=h3 | Slow Resources | 
    driver.findElement(By.cssSelector(".row:nth-child(6)")).click();
    // 398 | click | css=.example |  | 
    driver.findElement(By.cssSelector("body")).click();
    // 399 | click | css=p |  | 
    driver.findElement(By.linkText("Slow Resources")).click();
    // 400 | click | linkText=Sortable Data Tables |  | 
    driver.findElement(By.id("content")).click();
    // 401 | storeText | css=#table1 .header:nth-child(3) > span | TestSortedTableValue | 
    assertThat(driver.findElement(By.cssSelector("h3")).getText(), is("Slow Resources"));
    // 402 | click | linkText=delete |  | 
    driver.findElement(By.cssSelector(".example")).click();
    // 403 | click | css=#table1 tr:nth-child(2) a:nth-child(2) |  | 
    driver.findElement(By.cssSelector("p")).click();
    // 404 | click | css=tr:nth-child(2) > .action > a:nth-child(1) |  | 
    driver.findElement(By.linkText("Sortable Data Tables")).click();
    // 405 | click | css=tr:nth-child(2) > .action > a:nth-child(2) |  | 
    vars.put("TestSortedTableValue", driver.findElement(By.cssSelector("#table1 .header:nth-child(3) > span")).getText());
    // 406 | click | linkText=Sortable Data Tables |  | 
    driver.findElement(By.linkText("delete")).click();
    // 407 | click | css=#table1 .header:nth-child(5) > span |  | 
    driver.findElement(By.cssSelector("#table1 tr:nth-child(2) a:nth-child(2)")).click();
    // 408 | click | css=#table1 .header:nth-child(3) > span |  | 
    driver.findElement(By.cssSelector("tr:nth-child(2) > .action > a:nth-child(1)")).click();
    // 409 | click | css=#table1 .header:nth-child(4) > span |  | 
    driver.findElement(By.cssSelector("tr:nth-child(2) > .action > a:nth-child(2)")).click();
    // 410 | click | css=.dues:nth-child(1) |  | 
    driver.findElement(By.linkText("Sortable Data Tables")).click();
    // 411 | click | css=.first-name:nth-child(1) |  | 
    driver.findElement(By.cssSelector("#table1 .header:nth-child(5) > span")).click();
    // 412 | click | linkText=Status Codes |  | 
    driver.findElement(By.cssSelector("#table1 .header:nth-child(3) > span")).click();
    // 413 | click | linkText=301 |  | 
    driver.findElement(By.cssSelector("#table1 .header:nth-child(4) > span")).click();
    // 414 | click | linkText=Typos |  | 
    driver.findElement(By.cssSelector(".dues:nth-child(1)")).click();
    // 415 | click | id=content |  | 
    driver.findElement(By.cssSelector(".first-name:nth-child(1)")).click();
    // 416 | click | id=content |  | 
    driver.findElement(By.linkText("Status Codes")).click();
    // 417 | doubleClick | id=content |  | 
    driver.findElement(By.linkText("301")).click();
    // 418 | mouseDown | id=content |  | 
    driver.findElement(By.linkText("Typos")).click();
    // 419 | mouseUp | css=.\_2BioG:nth-child(1) > span:nth-child(2) |  | 
    driver.findElement(By.id("content")).click();
    // 420 | click | css=html |  | 
    driver.findElement(By.id("content")).click();
    // 421 | click | linkText=WYSIWYG Editor |  | 
    {
      WebElement element = driver.findElement(By.id("content"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    // 422 | close |  |  | 
    {
      WebElement element = driver.findElement(By.id("content"));
      Action builder = new Actions(driver);
      builder.moveToElement(element).clickAndHold().perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".\_2BioG:nth-child(1) > span:nth-child(2)"));
      Action builder = new Actions(driver);
      builder.moveToElement(element).release().perform();
    }
    driver.findElement(By.cssSelector("html")).click();
    driver.findElement(By.linkText("WYSIWYG Editor")).click();
    driver.close();
  }
}
