package CrackSeleniumInterviewExamples;

// Generated by Selenium IDE

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;

import java.util.HashMap;
import java.util.Map;

import static org.junit.Assert.assertEquals;
public class Ch4_Prog_4_SeleniumIDE_ControlFlowExample {
    private WebDriver driver;
    private Map<String, Object> vars;
    JavascriptExecutor js;
    @Before
    public void setUp() {
        driver = new FirefoxDriver();
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
    }
    @After
    public void tearDown() {
        driver.quit();
    }
    @Test
    public void controlFlow() {
        // Test name: ControlFlow
        // Step # | name | target | value | comment
        // 1 | executeScript | return "a" | myVar |
        vars.put("myVar", js.executeScript("return \"a\""));
        // 2 | if | ${myVar} === "a" |  |
        if ((Boolean) js.executeScript("return (arguments[0] === \'a\')", vars.get("myVar"))) {
            // 3 | executeScript | return "a" | output |
            vars.put("output", js.executeScript("return \"a\""));
            // 4 | elseIf | ${myVar} === "b" |  |
        } else if ((Boolean) js.executeScript("return (arguments[0] === \'b\')", vars.get("myVar"))) {
            // 5 | executeScript | return "b" | output |
            vars.put("output", js.executeScript("return \"b\""));
            // 6 | elseIf | ${myVar} === "c" |  |
        } else if ((Boolean) js.executeScript("return (arguments[0] === \'c\')", vars.get("myVar"))) {
            // 7 | executeScript | return "c" | output |
            vars.put("output", js.executeScript("return \"c\""));
            // 8 | end |  |  |
        }
        // 9 | assert | output | a |
        assertEquals(vars.get("output").toString(), "a");
        // 10 | assert | output | b |
        assertEquals(vars.get("output").toString(), "b");
    }
}
