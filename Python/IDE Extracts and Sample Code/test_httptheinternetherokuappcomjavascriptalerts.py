# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys

class TestHttptheinternetherokuappcomjavascriptalerts():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_httptheinternetherokuappcomjavascriptalerts(self):
    # Test name: http__the_internet_herokuapp_com_javascript_alerts
    # Step # | name | target | value | comment
    # 1 | open | /javascript_alerts |  | 
    self.driver.get("http://the-internet.herokuapp.com/javascript_alerts")
    # 2 | setWindowSize | 1382x744 |  | 
    self.driver.set_window_size(1382, 744)
    # 3 | click | css=li:nth-child(1) > button |  | 
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(1) > button").click()
    # 4 | assertAlert | I am a JS Alert |  | 
    assert self.driver.switch_to.alert.text == "I am a JS Alert"
    # 5 | chooseOkOnNextConfirmation |  |  | 
    # 6 | click | css=li:nth-child(2) > button |  | 
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(2) > button").click()
    # 7 | assertConfirmation | I am a JS Confirm |  | 
    assert self.driver.switch_to.alert.text == "I am a JS Confirm"
    # 8 | webdriverChooseOkOnVisibleConfirmation |  |  | 
    self.driver.switch_to.alert.accept()
    # 9 | chooseCancelOnNextConfirmation |  |  | 
    # 10 | click | css=li:nth-child(2) > button |  | 
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(2) > button").click()
    # 11 | assertConfirmation | I am a JS Confirm |  | 
    assert self.driver.switch_to.alert.text == "I am a JS Confirm"
    # 12 | webdriverChooseCancelOnVisibleConfirmation |  |  | 
    self.driver.switch_to.alert.dismiss()
    # 13 | answerOnNextPrompt | Hello World |  | 
    # 14 | click | css=li:nth-child(3) > button |  | 
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(3) > button").click()
    # 15 | assertPrompt | I am a JS prompt |  | 
    assert self.driver.switch_to.alert.text == "I am a JS prompt"
    # 16 | webdriverAnswerOnVisiblePrompt | Hello World |  | 
    alert = self.driver.switch_to.alert
    alert.send_keys("Hello World")
    alert.accept()
    # 17 | answerOnNextPrompt | Testing Selenium Interview Questions! |  | 
    # 18 | click | css=li:nth-child(3) > button |  | 
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(3) > button").click()
    # 19 | assertPrompt | I am a JS prompt |  | 
    assert self.driver.switch_to.alert.text == "I am a JS prompt"
    # 20 | webdriverAnswerOnVisiblePrompt | Testing Selenium Interview Questions! |  | 
    alert = self.driver.switch_to.alert
    alert.send_keys("Testing Selenium Interview Questions!")
    alert.accept()
    # 21 | chooseCancelOnNextPrompt |  |  | 
    # 22 | click | css=li:nth-child(3) > button |  | 
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(3) > button").click()
    # 23 | assertPrompt | I am a JS prompt |  | 
    assert self.driver.switch_to.alert.text == "I am a JS prompt"
    # 24 | webdriverChooseCancelOnVisiblePrompt |  |  | 
    self.driver.switch_to.alert.dismiss()
    # 25 | chooseCancelOnNextPrompt |  |  | 
    # 26 | click | css=li:nth-child(3) > button |  | 
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(3) > button").click()
    # 27 | assertPrompt | I am a JS prompt |  | 
    assert self.driver.switch_to.alert.text == "I am a JS prompt"
    # 28 | webdriverChooseCancelOnVisiblePrompt |  |  | 
    self.driver.switch_to.alert.dismiss()
    # 29 | close |  |  | 
    self.driver.close()
  
