# -*- coding: utf-8 -*-
"""
Created on Sun Jul 28 19:46:36 2019

@author: rahma
"""

# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys

from selenium import webdriver
from selenium.common.exceptions import TimeoutException
from selenium.webdriver.support.ui import WebDriverWait # available since 2.4.0
from selenium.webdriver.support import expected_conditions as EC # available since 2.26.0

# Create a new instance of the Firefox driver
##driver = webdriver.Firefox()

driver = webdriver.Chrome(executable_path ="C:\\Users\\rahma\\OneDrive\\Desktop\\Selenium\\chromedriver.exe")

# Test name: TheInternetHerokuSeleniumTestApp
# Step # | name | target | value | comment
# 1 | open | / |  | 
driver.get("http://the-internet.herokuapp.com/")
# 2 | setWindowSize | 1382x744 |  | 
driver.set_window_size(1382, 744)
# 3 | click | linkText=A/B Testing |  | 
driver.find_element(By.LINK_TEXT, "A/B Testing").click()
# 4 | click | css=p |  | 
driver.find_element(By.CSS_SELECTOR, "p").click()
# 5 | verifyTitle | The Internet |  | 
assert driver.title == "The Internet"
# 6 | click | css=p |  | 
driver.find_element(By.CSS_SELECTOR, "p").click()
driver.get("http://the-internet.herokuapp.com/")
# 7 | click | linkText=Add/Remove Elements |  | 
driver.find_element(By.LINK_TEXT, "Add/Remove Elements").click()
# 8 | assertTitle | The Internet |  | 
assert driver.title == "The Internet"
# 9 | click | css=button |  | 
driver.find_element(By.CSS_SELECTOR, "button").click()
# 10 | mouseOver | css=button |  | 
element = driver.find_element(By.CSS_SELECTOR, "button")
actions = ActionChains(driver)
actions.move_to_element(element).perform()
# 11 | mouseOut | css=.example > button |  | 
element = driver.find_element(By.CSS_SELECTOR, "body")
actions = ActionChains(driver)
actions.move_to_element(element, 0, 0).perform()
# 12 | click | css=.example > button |  | 
driver.find_element(By.CSS_SELECTOR, ".example > button").click()
# 13 | mouseOver | css=.example > button |  | 
element = driver.find_element(By.CSS_SELECTOR, ".example > button")
actions = ActionChains(driver)
actions.move_to_element(element).perform()
# 14 | click | css=.example > button |  | 
driver.find_element(By.CSS_SELECTOR, ".example > button").click()
# 15 | click | css=.example > button |  | 
driver.find_element(By.CSS_SELECTOR, ".example > button").click()
# 16 | doubleClick | css=.example > button |  | 
element = driver.find_element(By.CSS_SELECTOR, ".example > button")
actions = ActionChains(driver)
actions.double_click(element).perform()
# 17 | click | css=.example > button |  | 
driver.find_element(By.CSS_SELECTOR, ".example > button").click()
# 18 | click | css=.example > button |  | 
driver.find_element(By.CSS_SELECTOR, ".example > button").click()
# 19 | click | css=.example > button |  | 
driver.find_element(By.CSS_SELECTOR, ".example > button").click()
# 20 | click | css=.example > button |  | 
driver.find_element(By.CSS_SELECTOR, ".example > button").click()
# 21 | doubleClick | css=.example > button |  | 
element = driver.find_element(By.CSS_SELECTOR, ".example > button")
actions = ActionChains(driver)
actions.double_click(element).perform()
# 22 | click | css=.example > button |  | 
driver.find_element(By.CSS_SELECTOR, ".example > button").click()
# 23 | click | css=.example > button |  | 
driver.find_element(By.CSS_SELECTOR, ".example > button").click()
# 24 | click | css=.example > button |  | 
driver.find_element(By.CSS_SELECTOR, ".example > button").click()
# 25 | click | css=.example > button |  | 
driver.find_element(By.CSS_SELECTOR, ".example > button").click()
# 26 | click | css=.example > button |  | 
driver.find_element(By.CSS_SELECTOR, ".example > button").click()
# 27 | click | css=.example > button |  | 
driver.find_element(By.CSS_SELECTOR, ".example > button").click()
# 28 | click | css=.example > button |  | 
driver.find_element(By.CSS_SELECTOR, ".example > button").click()
# 29 | click | css=.example > button |  | 
driver.find_element(By.CSS_SELECTOR, ".example > button").click()
# 30 | click | css=.example > button |  | 
driver.find_element(By.CSS_SELECTOR, ".example > button").click()
# 31 | mouseOut | css=.example > button |  | 
element = driver.find_element(By.CSS_SELECTOR, "body")
actions = ActionChains(driver)
actions.move_to_element(element, 0, 0).perform()
# 32 | click | css=.added-manually:nth-child(4) |  | 
driver.find_element(By.CSS_SELECTOR, ".added-manually:nth-child(4)").click()
# 33 | click | css=.added-manually:nth-child(4) |  | 
driver.find_element(By.CSS_SELECTOR, ".added-manually:nth-child(4)").click()
# 34 | doubleClick | css=.added-manually:nth-child(3) |  | 
element = driver.find_element(By.CSS_SELECTOR, ".added-manually:nth-child(3)")
actions = ActionChains(driver)
actions.double_click(element).perform()
# 35 | click | css=.added-manually:nth-child(4) |  | 
driver.find_element(By.CSS_SELECTOR, ".added-manually:nth-child(4)").click()
# 36 | click | css=.added-manually:nth-child(4) |  | 
driver.find_element(By.CSS_SELECTOR, ".added-manually:nth-child(4)").click()
# 37 | click | css=.added-manually:nth-child(4) |  | 
driver.find_element(By.CSS_SELECTOR, ".added-manually:nth-child(4)").click()
# 38 | click | css=.added-manually:nth-child(4) |  | 
driver.find_element(By.CSS_SELECTOR, ".added-manually:nth-child(4)").click()
# 39 | click | css=.added-manually:nth-child(4) |  | 
driver.find_element(By.CSS_SELECTOR, ".added-manually:nth-child(4)").click()
# 40 | click | css=.added-manually:nth-child(4) |  | 
driver.find_element(By.CSS_SELECTOR, ".added-manually:nth-child(4)").click()
# 41 | click | css=.added-manually:nth-child(4) |  | 
driver.find_element(By.CSS_SELECTOR, ".added-manually:nth-child(4)").click()
# 42 | click | css=.added-manually:nth-child(4) |  | 
driver.find_element(By.CSS_SELECTOR, ".added-manually:nth-child(4)").click()
# 43 | click | css=.added-manually:nth-child(4) |  | 
driver.find_element(By.CSS_SELECTOR, ".added-manually:nth-child(4)").click()
# 44 | click | css=.added-manually:nth-child(4) |  | 
driver.find_element(By.CSS_SELECTOR, ".added-manually:nth-child(4)").click()
# 45 | click | css=.added-manually:nth-child(4) |  | 
driver.find_element(By.CSS_SELECTOR, ".added-manually:nth-child(4)").click()
# 46 | doubleClick | css=.added-manually:nth-child(3) |  | 
element = driver.find_element(By.CSS_SELECTOR, ".added-manually:nth-child(3)")
actions = ActionChains(driver)
actions.double_click(element).perform()
# 47 | click | css=.added-manually:nth-child(4) |  | 
driver.find_element(By.CSS_SELECTOR, ".added-manually:nth-child(4)").click()
# 48 | click | css=.added-manually:nth-child(3) |  | 
driver.find_element(By.CSS_SELECTOR, ".added-manually:nth-child(3)").click()
# 49 | click | css=.added-manually:nth-child(2) |  | 
driver.find_element(By.CSS_SELECTOR, ".added-manually:nth-child(2)").click()
# 50 | click | css=.added-manually |  | 
driver.find_element(By.CSS_SELECTOR, ".added-manually").click()
# 51 | click | css=button |  | 
driver.find_element(By.CSS_SELECTOR, "button").click()
# 52 | mouseOver | css=button |  | 
element = driver.find_element(By.CSS_SELECTOR, "button")
actions = ActionChains(driver)
actions.move_to_element(element).perform()
# 53 | mouseOut | css=.example > button |  | 
element = driver.find_element(By.CSS_SELECTOR, "body")
actions = ActionChains(driver)
actions.move_to_element(element, 0, 0).perform()
driver.get("http://the-internet.herokuapp.com/")
# 54 | click | linkText=Basic Auth |  | 
driver.find_element(By.LINK_TEXT, "Basic Auth").click()
# 55 | click | css=h3 |  | 
driver.find_element(By.CSS_SELECTOR, "h3").click()
# 56 | click | linkText=Broken Images |  | 
driver.find_element(By.LINK_TEXT, "Broken Images").click()
# 57 | mouseOver | css=img:nth-child(3) |  | 
element = driver.find_element(By.CSS_SELECTOR, "img:nth-child(3)")
actions = ActionChains(driver)
actions.move_to_element(element).perform()
# 58 | mouseOver | css=img:nth-child(4) |  | 
element = driver.find_element(By.CSS_SELECTOR, "img:nth-child(4)")
actions = ActionChains(driver)
actions.move_to_element(element).perform()
# 59 | click | linkText=Challenging DOM |  | 
driver.find_element(By.LINK_TEXT, "Challenging DOM").click()
# 60 | click | id=a84e9fa0-932d-0137-8c8c-7a12225e6570 |  | 
driver.find_element(By.ID, "a84e9fa0-932d-0137-8c8c-7a12225e6570").click()
# 61 | click | id=a996cd70-932d-0137-8ca1-7a12225e6570 |  | 
driver.find_element(By.ID, "a996cd70-932d-0137-8ca1-7a12225e6570").click()
# 62 | click | id=aabce840-932d-0137-8cca-7a12225e6570 |  | 
driver.find_element(By.ID, "aabce840-932d-0137-8cca-7a12225e6570").click()
# 63 | click | css=tr:nth-child(3) a:nth-child(1) |  | 
driver.find_element(By.CSS_SELECTOR, "tr:nth-child(3) a:nth-child(1)").click()
# 64 | click | css=tr:nth-child(3) a:nth-child(1) |  | 
driver.find_element(By.CSS_SELECTOR, "tr:nth-child(3) a:nth-child(1)").click()
# 65 | click | css=tr:nth-child(3) a:nth-child(1) |  | 
driver.find_element(By.CSS_SELECTOR, "tr:nth-child(3) a:nth-child(1)").click()
# 66 | click | css=tr:nth-child(3) a:nth-child(2) |  | 
driver.find_element(By.CSS_SELECTOR, "tr:nth-child(3) a:nth-child(2)").click()
# 67 | click | id=abaf7270-932d-0137-8cdc-7a12225e6570 |  | 
driver.find_element(By.ID, "abaf7270-932d-0137-8cdc-7a12225e6570").click()
# 68 | click | css=tr:nth-child(4) a:nth-child(2) |  | 
driver.find_element(By.CSS_SELECTOR, "tr:nth-child(4) a:nth-child(2)").click()
# 69 | click | css=tr:nth-child(4) a:nth-child(2) |  | 
driver.find_element(By.CSS_SELECTOR, "tr:nth-child(4) a:nth-child(2)").click()
# 70 | click | css=tr:nth-child(4) a:nth-child(2) |  | 
driver.find_element(By.CSS_SELECTOR, "tr:nth-child(4) a:nth-child(2)").click()
# 71 | verifyTitle | The Internet |  | 
assert driver.title == "The Internet"
# 72 | click | linkText=Checkboxes |  | 
driver.find_element(By.LINK_TEXT, "Checkboxes").click()
# 73 | click | css=input:nth-child(1) |  | 
driver.find_element(By.CSS_SELECTOR, "input:nth-child(1)").click()
# 74 | click | css=input:nth-child(3) |  | 
driver.find_element(By.CSS_SELECTOR, "input:nth-child(3)").click()
# 75 | click | linkText=Context Menu |  | 
driver.find_element(By.LINK_TEXT, "Context Menu").click()
# 76 | click | id=hot-spot |  | 
driver.find_element(By.ID, "hot-spot").click()
# 77 | assertAlert | You selected a context menu |  | 
assert driver.switch_to.alert.text == "You selected a context menu"
# 78 | mouseOver | id=hot-spot |  | 
element = driver.find_element(By.ID, "hot-spot")
actions = ActionChains(driver)
actions.move_to_element(element).perform()
# 79 | assertAlert | You selected a context menu |  | 
assert driver.switch_to.alert.text == "You selected a context menu"
# 80 | click | linkText=Digest Authentication |  | 
driver.find_element(By.LINK_TEXT, "Digest Authentication").click()
# 81 | click | linkText=Digest Authentication |  | 
driver.find_element(By.LINK_TEXT, "Digest Authentication").click()
# 82 | click | linkText=Disappearing Elements |  | 
driver.find_element(By.LINK_TEXT, "Disappearing Elements").click()
# 83 | click | linkText=Home |  | 
driver.find_element(By.LINK_TEXT, "Home").click()
# 84 | click | linkText=Disappearing Elements |  | 
driver.find_element(By.LINK_TEXT, "Disappearing Elements").click()
# 85 | click | linkText=About |  | 
driver.find_element(By.LINK_TEXT, "About").click()
# 86 | verifyText | css=body | Not Found | 
assert driver.find_element(By.CSS_SELECTOR, "body").text == "Not Found"
# 87 | click | linkText=Contact Us |  | 
driver.find_element(By.LINK_TEXT, "Contact Us").click()
# 88 | verifyText | css=body | Not Found | 
assert driver.find_element(By.CSS_SELECTOR, "body").text == "Not Found"
# 89 | click | linkText=Portfolio |  | 
driver.find_element(By.LINK_TEXT, "Portfolio").click()
# 90 | verifyText | css=body | Not Found | 
assert driver.find_element(By.CSS_SELECTOR, "body").text == "Not Found"
# 91 | click | linkText=Gallery |  | 
driver.find_element(By.LINK_TEXT, "Gallery").click()
# 92 | verifyText | css=body | Not Found | 
assert driver.find_element(By.CSS_SELECTOR, "body").text == "Not Found"
# 93 | click | linkText=Drag and Drop |  | 
driver.find_element(By.LINK_TEXT, "Drag and Drop").click()
# 94 | dragAndDropToObject | id=column-a | id=column-b | 
dragged = driver.find_element(By.ID, "column-a")
dropped = driver.find_element(By.ID, "column-b")
actions = ActionChains(driver)
actions.drag_and_drop(dragged, dropped).perform()
# 95 | dragAndDropToObject | id=column-b | id=column-a | 
dragged = driver.find_element(By.ID, "column-b")
dropped = driver.find_element(By.ID, "column-a")
actions = ActionChains(driver)
actions.drag_and_drop(dragged, dropped).perform()
# 96 | click | linkText=Dropdown |  | 
driver.find_element(By.LINK_TEXT, "Dropdown").click()
# 97 | click | id=dropdown |  | 
driver.find_element(By.ID, "dropdown").click()
# 98 | select | id=dropdown | label=Option 1 | 
dropdown = driver.find_element(By.ID, "dropdown")
dropdown.find_element(By.XPATH, "//option[. = 'Option 1']").click()
# 99 | click | id=dropdown |  | 
driver.find_element(By.ID, "dropdown").click()
# 100 | click | id=dropdown |  | 
driver.find_element(By.ID, "dropdown").click()
# 101 | select | id=dropdown | label=Option 2 | 
dropdown = driver.find_element(By.ID, "dropdown")
dropdown.find_element(By.XPATH, "//option[. = 'Option 2']").click()
# 102 | click | id=dropdown |  | 
driver.find_element(By.ID, "dropdown").click()
# 103 | click | linkText=Dynamic Content |  | 
driver.find_element(By.LINK_TEXT, "Dynamic Content").click()
# 104 | click | linkText=click here |  | 
driver.find_element(By.LINK_TEXT, "click here").click()
# 105 | click | linkText=click here |  | 
driver.find_element(By.LINK_TEXT, "click here").click()
# 106 | assertText | css=.row:nth-child(7) > .large-10:nth-child(2) | Vel nesciunt hic rerum doloribus enim earum sequi consequatur repellat quos dignissimos iusto nihil quam animi voluptatem ipsa blanditiis rerum non expedita maiores voluptatem quis doloremque rem corrupti deserunt culpa tenetur. | 
assert driver.find_element(By.CSS_SELECTOR, ".row:nth-child(7) > .large-10:nth-child(2)").text == "Vel nesciunt hic rerum doloribus enim earum sequi consequatur repellat quos dignissimos iusto nihil quam animi voluptatem ipsa blanditiis rerum non expedita maiores voluptatem quis doloremque rem corrupti deserunt culpa tenetur."
# 107 | verifyText | css=.row:nth-child(1) > .large-10 | Accusantium eius ut architecto neque vel voluptatem vel nam eos minus ullam dolores voluptates enim sed voluptatem rerum qui sapiente nesciunt aspernatur et accusamus laboriosam culpa tenetur hic aut placeat error autem qui sunt. | 
assert driver.find_element(By.CSS_SELECTOR, ".row:nth-child(1) > .large-10").text == "Accusantium eius ut architecto neque vel voluptatem vel nam eos minus ullam dolores voluptates enim sed voluptatem rerum qui sapiente nesciunt aspernatur et accusamus laboriosam culpa tenetur hic aut placeat error autem qui sunt."
# 108 | click | linkText=Dynamic Controls |  | 
driver.find_element(By.LINK_TEXT, "Dynamic Controls").click()
# 109 | click | id=checkbox |  | 
driver.find_element(By.ID, "checkbox").click()
# 110 | click | css=#checkbox > input |  | 
driver.find_element(By.CSS_SELECTOR, "#checkbox > input").click()
# 111 | click | css=#checkbox-example > button |  | 
driver.find_element(By.CSS_SELECTOR, "#checkbox-example > button").click()
# 112 | click | css=button:nth-child(1) |  | 
driver.find_element(By.CSS_SELECTOR, "button:nth-child(1)").click()
# 113 | mouseOver | css=button:nth-child(1) |  | 
element = driver.find_element(By.CSS_SELECTOR, "button:nth-child(1)")
actions = ActionChains(driver)
actions.move_to_element(element).perform()
# 114 | click | css=button:nth-child(2) |  | 
driver.find_element(By.CSS_SELECTOR, "button:nth-child(2)").click()
# 115 | mouseOver | css=button:nth-child(2) |  | 
element = driver.find_element(By.CSS_SELECTOR, "button:nth-child(2)")
actions = ActionChains(driver)
actions.move_to_element(element).perform()
# 116 | click | css=#input-example > input |  | 
driver.find_element(By.CSS_SELECTOR, "#input-example > input").click()
# 117 | click | css=#input-example > input |  | 
driver.find_element(By.CSS_SELECTOR, "#input-example > input").click()
# 118 | type | css=#input-example > input | Crack your Selenium Interview | 
driver.find_element(By.CSS_SELECTOR, "#input-example > input").send_keys("Crack your Selenium Interview")
# 119 | click | id=input-example |  | 
driver.find_element(By.ID, "input-example").click()
# 120 | click | css=button:nth-child(2) |  | 
driver.find_element(By.CSS_SELECTOR, "button:nth-child(2)").click()
# 121 | mouseOver | css=button:nth-child(2) |  | 
element = driver.find_element(By.CSS_SELECTOR, "button:nth-child(2)")
actions = ActionChains(driver)
actions.move_to_element(element).perform()
# 122 | click | css=button:nth-child(2) |  | 
driver.find_element(By.CSS_SELECTOR, "button:nth-child(2)").click()
# 123 | mouseOver | css=button:nth-child(2) |  | 
element = driver.find_element(By.CSS_SELECTOR, "button:nth-child(2)")
actions = ActionChains(driver)
actions.move_to_element(element).perform()
# 124 | click | linkText=Dynamic Loading |  | 
driver.find_element(By.LINK_TEXT, "Dynamic Loading").click()
# 125 | click | linkText=Example 1: Element on page that is hidden |  | 
driver.find_element(By.LINK_TEXT, "Example 1: Element on page that is hidden").click()
# 126 | click | css=button |  | 
driver.find_element(By.CSS_SELECTOR, "button").click()
# 127 | click | css=h4:nth-child(1) |  | 
driver.find_element(By.CSS_SELECTOR, "h4:nth-child(1)").click()
# 128 | click | css=h4:nth-child(1) |  | 
driver.find_element(By.CSS_SELECTOR, "h4:nth-child(1)").click()
# 129 | click | linkText=Example 2: Element rendered after the fact |  | 
driver.find_element(By.LINK_TEXT, "Example 2: Element rendered after the fact").click()
# 130 | click | css=button |  | 
driver.find_element(By.CSS_SELECTOR, "button").click()
# 131 | assertText | css=h4:nth-child(1) | Hello World! | 
assert driver.find_element(By.CSS_SELECTOR, "h4:nth-child(1)").text == "Hello World!"
# 132 | verifyText | css=h4:nth-child(1) | Hello World! | 
assert driver.find_element(By.CSS_SELECTOR, "h4:nth-child(1)").text == "Hello World!"
# 133 | click | linkText=Entry Ad |  | 
driver.find_element(By.LINK_TEXT, "Entry Ad").click()
# 134 | verifyText | css=.modal-title | THIS IS A MODAL WINDOW | 
assert driver.find_element(By.CSS_SELECTOR, ".modal-title").text == "THIS IS A MODAL WINDOW"
# 135 | click | css=.modal-footer > p |  | 
driver.find_element(By.CSS_SELECTOR, ".modal-footer > p").click()
# 136 | click | id=restart-ad |  | 
driver.find_element(By.ID, "restart-ad").click()
# 137 | click | css=.modal-footer > p |  | 
driver.find_element(By.CSS_SELECTOR, ".modal-footer > p").click()
# 138 | click | linkText=Exit Intent |  | 
driver.find_element(By.LINK_TEXT, "Exit Intent").click()
# 139 | verifyText | css=p:nth-child(2) | Mouse out of the viewport pane and see a modal window appear. | 
assert driver.find_element(By.CSS_SELECTOR, "p:nth-child(2)").text == "Mouse out of the viewport pane and see a modal window appear."
# 140 | verifyText | css=.modal | THIS IS A MODAL WINDOW\nIt's commonly used to encourage a user to take an action (e.g., give their e-mail address to sign up for something).\nClose | 
assert driver.find_element(By.CSS_SELECTOR, ".modal").text == "THIS IS A MODAL WINDOW\nIt\\'s commonly used to encourage a user to take an action (e.g., give their e-mail address to sign up for something).\nClose"
# 141 | click | css=.modal-footer > p |  | 
driver.find_element(By.CSS_SELECTOR, ".modal-footer > p").click()
# 142 | click | linkText=File Download |  | 
driver.find_element(By.LINK_TEXT, "File Download").click()
# 143 | click | linkText=some-file.txt |  | 
driver.find_element(By.LINK_TEXT, "some-file.txt").click()
# 144 | click | linkText=simple.txt |  | 
driver.find_element(By.LINK_TEXT, "simple.txt").click()
# 145 | click | linkText=simple.txt |  | 
driver.find_element(By.LINK_TEXT, "simple.txt").click()
# 146 | storeText | linkText=some-file.txt | test | 
vars["test"] = driver.find_element(By.LINK_TEXT, "some-file.txt").text
# 147 | click | linkText=File Upload |  | 
driver.find_element(By.LINK_TEXT, "File Upload").click()
# 148 | click | id=file-upload |  | 
driver.find_element(By.ID, "file-upload").click()
# 149 | type | id=file-upload | C:\fakepath\simple.txt | 
driver.find_element(By.ID, "file-upload").send_keys("C:\fakepath\simple.txt")
# 150 | click | id=file-submit |  | 
driver.find_element(By.ID, "file-submit").click()
# 151 | assertText | id=uploaded-files | simple.txt | 
assert driver.find_element(By.ID, "uploaded-files").text == "simple.txt"
# 152 | click | linkText=Floating Menu |  | 
driver.find_element(By.LINK_TEXT, "Floating Menu").click()
# 153 | mouseOver | linkText=Home |  | 
element = driver.find_element(By.LINK_TEXT, "Home")
actions = ActionChains(driver)
actions.move_to_element(element).perform()
# 154 | click | linkText=Home |  | 
driver.find_element(By.LINK_TEXT, "Home").click()
# 155 | click | linkText=News |  | 
driver.find_element(By.LINK_TEXT, "News").click()
# 156 | mouseOver | linkText=News |  | 
element = driver.find_element(By.LINK_TEXT, "News")
actions = ActionChains(driver)
actions.move_to_element(element).perform()
# 157 | click | linkText=About |  | 
driver.find_element(By.LINK_TEXT, "About").click()
# 158 | click | linkText=About |  | 
driver.find_element(By.LINK_TEXT, "About").click()
# 159 | click | css=p:nth-child(4) |  | 
driver.find_element(By.CSS_SELECTOR, "p:nth-child(4)").click()
# 160 | click | linkText=Forgot Password |  | 
driver.find_element(By.LINK_TEXT, "Forgot Password").click()
# 161 | click | css=label |  | 
driver.find_element(By.CSS_SELECTOR, "label").click()
# 162 | click | css=label |  | 
driver.find_element(By.CSS_SELECTOR, "label").click()
# 163 | type | id=email | a@b.c | 
driver.find_element(By.ID, "email").send_keys("a@b.c")
# 164 | click | css=.icon-2x |  | 
driver.find_element(By.CSS_SELECTOR, ".icon-2x").click()
# 165 | click | linkText=Form Authentication |  | 
driver.find_element(By.LINK_TEXT, "Form Authentication").click()
# 166 | click | id=username |  | 
driver.find_element(By.ID, "username").click()
# 167 | type | id=username | tomsmith | 
driver.find_element(By.ID, "username").send_keys("tomsmith")
# 168 | type | id=password | SuperSecretPassword! | 
driver.find_element(By.ID, "password").send_keys("SuperSecretPassword!")
# 169 | click | css=.fa |  | 
driver.find_element(By.CSS_SELECTOR, ".fa").click()
# 170 | click | linkText=Logout |  | 
driver.find_element(By.LINK_TEXT, "Logout").click()
# 171 | click | id=password |  | 
driver.find_element(By.ID, "password").click()
# 172 | type | id=password | SuperSecretPassword!2 | 
driver.find_element(By.ID, "password").send_keys("SuperSecretPassword!2")
# 173 | click | css=.fa |  | 
driver.find_element(By.CSS_SELECTOR, ".fa").click()
# 174 | click | linkText=Frames |  | 
driver.find_element(By.LINK_TEXT, "Frames").click()
# 175 | mouseDownAt | linkText=Nested Frames | 84,6.109375 | 
element = driver.find_element(By.LINK_TEXT, "Nested Frames")
actions = ActionChains(driver)
actions.move_to_element(element).click_and_hold().perform()
# 176 | mouseMoveAt | linkText=Nested Frames | 84,6.109375 | 
element = driver.find_element(By.LINK_TEXT, "Nested Frames")
actions = ActionChains(driver)
actions.move_to_element(element).perform()
# 177 | mouseUpAt | linkText=Nested Frames | 84,6.109375 | 
element = driver.find_element(By.LINK_TEXT, "Nested Frames")
actions = ActionChains(driver)
actions.move_to_element(element).release().perform()
# 178 | click | linkText=Nested Frames |  | 
driver.find_element(By.LINK_TEXT, "Nested Frames").click()
# 179 | selectFrame | index=0 |  | 
driver.switch_to.frame(0)
# 180 | selectFrame | index=0 |  | 
driver.switch_to.frame(0)
# 181 | click | css=body |  | 
driver.find_element(By.CSS_SELECTOR, "body").click()
# 182 | selectFrame | relative=parent |  | 
driver.switch_to.default_content()
# 183 | selectFrame | index=1 |  | 
driver.switch_to.frame(1)
# 184 | click | css=body |  | 
driver.find_element(By.CSS_SELECTOR, "body").click()
# 185 | selectFrame | relative=parent |  | 
driver.switch_to.default_content()
# 186 | selectFrame | index=2 |  | 
driver.switch_to.frame(2)
# 187 | click | css=body |  | 
driver.find_element(By.CSS_SELECTOR, "body").click()
# 188 | selectFrame | relative=parent |  | 
driver.switch_to.default_content()
# 189 | selectFrame | relative=parent |  | 
driver.switch_to.default_content()
# 190 | selectFrame | index=1 |  | 
driver.switch_to.frame(1)
# 191 | click | css=body |  | 
driver.find_element(By.CSS_SELECTOR, "body").click()
# 192 | selectFrame | relative=parent |  | 
driver.switch_to.default_content()
# 193 | selectFrame | index=0 |  | 
driver.switch_to.frame(0)
# 194 | selectFrame | index=1 |  | 
driver.switch_to.frame(1)
# 195 | click | css=body |  | 
driver.find_element(By.CSS_SELECTOR, "body").click()
# 196 | click | css=body |  | 
driver.find_element(By.CSS_SELECTOR, "body").click()
# 197 | click | css=body |  | 
driver.find_element(By.CSS_SELECTOR, "body").click()
# 198 | click | css=body |  | 
driver.find_element(By.CSS_SELECTOR, "body").click()
# 199 | verifyTitle |  |  | 
assert driver.title == "undefined"
# 200 | selectFrame | relative=parent |  | 
driver.switch_to.default_content()
# 201 | selectFrame | relative=parent |  | 
driver.switch_to.default_content()
# 202 | click | linkText=iFrame |  | 
driver.find_element(By.LINK_TEXT, "iFrame").click()
# 203 | click | css=#mceu_15-open > span |  | 
driver.find_element(By.CSS_SELECTOR, "#mceu_15-open > span").click()
# 204 | click | id=mceu_32 |  | 
driver.find_element(By.ID, "mceu_32").click()
# 205 | mouseOver | id=mceu_15-open |  | 
element = driver.find_element(By.ID, "mceu_15-open")
actions = ActionChains(driver)
actions.move_to_element(element).perform()
# 206 | mouseOver | css=#mceu_1 > button |  | 
element = driver.find_element(By.CSS_SELECTOR, "#mceu_1 > button")
actions = ActionChains(driver)
actions.move_to_element(element).perform()
# 207 | mouseOut | css=#mceu_1 > button |  | 
element = driver.find_element(By.CSS_SELECTOR, "body")
actions = ActionChains(driver)
actions.move_to_element(element, 0, 0).perform()
# 208 | click | css=#mceu_16-open > span |  | 
driver.find_element(By.CSS_SELECTOR, "#mceu_16-open > span").click()
# 209 | selectFrame | index=0 |  | 
driver.switch_to.frame(0)
# 210 | editContent | id=tinymce | <p><br data-mce-bogus="1"></p> | 
element = driver.find_element(By.ID, "tinymce")
driver.execute_script("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<p><br data-mce-bogus=\"1\"></p>'}", element)
# 211 | click | css=html |  | 
driver.find_element(By.CSS_SELECTOR, "html").click()
# 212 | selectFrame | relative=parent |  | 
driver.switch_to.default_content()
# 213 | click | id=mceu_15-open |  | 
driver.find_element(By.ID, "mceu_15-open").click()
# 214 | selectFrame | index=0 |  | 
driver.switch_to.frame(0)
# 215 | editContent | id=tinymce | <p>Cracking Your Selenium Interview</p> | 
element = driver.find_element(By.ID, "tinymce")
driver.execute_script("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<p>Cracking Your Selenium Interview</p>'}", element)
# 216 | selectFrame | relative=parent |  | 
driver.switch_to.default_content()
# 217 | mouseOver | id=mceu_16-open |  | 
element = driver.find_element(By.ID, "mceu_16-open")
actions = ActionChains(driver)
actions.move_to_element(element).perform()
# 218 | selectFrame | index=0 |  | 
driver.switch_to.frame(0)
# 219 | click | css=html |  | 
driver.find_element(By.CSS_SELECTOR, "html").click()
# 220 | selectFrame | relative=parent |  | 
driver.switch_to.default_content()
# 221 | click | css=#mceu_18-open > span |  | 
driver.find_element(By.CSS_SELECTOR, "#mceu_18-open > span").click()
# 222 | click | id=mceu_48-text |  | 
driver.find_element(By.ID, "mceu_48-text").click()
# 223 | selectFrame | index=0 |  | 
driver.switch_to.frame(0)
# 224 | click | css=html |  | 
driver.find_element(By.CSS_SELECTOR, "html").click()
# 225 | selectFrame | relative=parent |  | 
driver.switch_to.default_content()
# 226 | click | css=button > .mce-i-bold |  | 
driver.find_element(By.CSS_SELECTOR, "button > .mce-i-bold").click()
# 227 | mouseOver | css=button > .mce-i-bold |  | 
element = driver.find_element(By.CSS_SELECTOR, "button > .mce-i-bold")
actions = ActionChains(driver)
actions.move_to_element(element).perform()
# 228 | mouseOut | css=button > .mce-i-bold |  | 
element = driver.find_element(By.CSS_SELECTOR, "body")
actions = ActionChains(driver)
actions.move_to_element(element, 0, 0).perform()
# 229 | click | css=button > .mce-i-italic |  | 
driver.find_element(By.CSS_SELECTOR, "button > .mce-i-italic").click()
# 230 | click | css=#mceu_2-open > span |  | 
driver.find_element(By.CSS_SELECTOR, "#mceu_2-open > span").click()
# 231 | mouseOver | css=#mceu_2-open > span |  | 
element = driver.find_element(By.CSS_SELECTOR, "#mceu_2-open > span")
actions = ActionChains(driver)
actions.move_to_element(element).perform()
# 232 | mouseOut | css=#mceu_2-open > span |  | 
element = driver.find_element(By.CSS_SELECTOR, "body")
actions = ActionChains(driver)
actions.move_to_element(element, 0, 0).perform()
# 233 | click | id=mceu_62 |  | 
driver.find_element(By.ID, "mceu_62").click()
# 234 | selectFrame | index=0 |  | 
driver.switch_to.frame(0)
# 235 | editContent | id=tinymce | <p><em><strong>Cracking Your Selenium Interview</strong></em></p> | 
element = driver.find_element(By.ID, "tinymce")
driver.execute_script("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<p><em><strong>Cracking Your Selenium Interview</strong></em></p>'}", element)
# 236 | editContent | id=tinymce | <h1><em><strong>Cracking Your Selenium Interview</strong></em></h1> | 
element = driver.find_element(By.ID, "tinymce")
driver.execute_script("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<h1><em><strong>Cracking Your Selenium Interview</strong></em></h1>'}", element)
# 237 | selectFrame | relative=parent |  | 
driver.switch_to.default_content()
# 238 | click | css=html |  | 
driver.find_element(By.CSS_SELECTOR, "html").click()
# 239 | click | css=body |  | 
driver.find_element(By.CSS_SELECTOR, "body").click()
# 240 | click | linkText=Geolocation |  | 
driver.find_element(By.LINK_TEXT, "Geolocation").click()
# 241 | click | css=button |  | 
driver.find_element(By.CSS_SELECTOR, "button").click()
# 242 | click | css=button |  | 
driver.find_element(By.CSS_SELECTOR, "button").click()
# 243 | click | css=.example |  | 
driver.find_element(By.CSS_SELECTOR, ".example").click()
# 244 | verifyTitle | The Internet |  | 
assert driver.title == "The Internet"
# 245 | click | css=button |  | 
driver.find_element(By.CSS_SELECTOR, "button").click()
# 246 | click | linkText=Horizontal Slider |  | 
driver.find_element(By.LINK_TEXT, "Horizontal Slider").click()
# 247 | type | css=input | 0.5 | 
driver.find_element(By.CSS_SELECTOR, "input").send_keys("0.5")
# 248 | click | css=input |  | 
driver.find_element(By.CSS_SELECTOR, "input").click()
# 249 | type | css=input | 1.5 | 
driver.find_element(By.CSS_SELECTOR, "input").send_keys("1.5")
# 250 | click | css=input |  | 
driver.find_element(By.CSS_SELECTOR, "input").click()
# 251 | type | css=input | 2.5 | 
driver.find_element(By.CSS_SELECTOR, "input").send_keys("2.5")
# 252 | click | css=input |  | 
driver.find_element(By.CSS_SELECTOR, "input").click()
# 253 | type | css=input | 3 | 
driver.find_element(By.CSS_SELECTOR, "input").send_keys("3")
# 254 | click | css=input |  | 
driver.find_element(By.CSS_SELECTOR, "input").click()
# 255 | type | css=input | 5 | 
driver.find_element(By.CSS_SELECTOR, "input").send_keys("5")
# 256 | click | css=input |  | 
driver.find_element(By.CSS_SELECTOR, "input").click()
# 257 | click | linkText=Hovers |  | 
driver.find_element(By.LINK_TEXT, "Hovers").click()
# 258 | click | css=.figure:nth-child(4) > img |  | 
driver.find_element(By.CSS_SELECTOR, ".figure:nth-child(4) > img").click()
# 259 | click | linkText=View profile |  | 
driver.find_element(By.LINK_TEXT, "View profile").click()
# 260 | click | linkText=View profile |  | 
driver.find_element(By.LINK_TEXT, "View profile").click()
# 261 | click | linkText=Infinite Scroll |  | 
driver.find_element(By.LINK_TEXT, "Infinite Scroll").click()
# 262 | runScript | window.scrollTo(0,305) |  | 
driver.execute_script("window.scrollTo(0,305)")
# 263 | runScript | window.scrollTo(0,1146) |  | 
driver.execute_script("window.scrollTo(0,1146)")
# 264 | runScript | window.scrollTo(0,1566) |  | 
driver.execute_script("window.scrollTo(0,1566)")
# 265 | runScript | window.scrollTo(0,1943) |  | 
driver.execute_script("window.scrollTo(0,1943)")
# 266 | runScript | window.scrollTo(0,2345) |  | 
driver.execute_script("window.scrollTo(0,2345)")
# 267 | runScript | window.scrollTo(0,3171) |  | 
driver.execute_script("window.scrollTo(0,3171)")
# 268 | runScript | window.scrollTo(0,3565) |  | 
driver.execute_script("window.scrollTo(0,3565)")
# 269 | runScript | window.scrollTo(0,4374) |  | 
driver.execute_script("window.scrollTo(0,4374)")
# 270 | runScript | window.scrollTo(0,5201) |  | 
driver.execute_script("window.scrollTo(0,5201)")
# 271 | runScript | window.scrollTo(0,5594) |  | 
driver.execute_script("window.scrollTo(0,5594)")
# 272 | click | linkText=Inputs |  | 
driver.find_element(By.LINK_TEXT, "Inputs").click()
# 273 | click | css=input |  | 
driver.find_element(By.CSS_SELECTOR, "input").click()
# 274 | click | css=input |  | 
driver.find_element(By.CSS_SELECTOR, "input").click()
# 275 | type | css=input | 1 | 
driver.find_element(By.CSS_SELECTOR, "input").send_keys("1")
# 276 | click | css=input |  | 
driver.find_element(By.CSS_SELECTOR, "input").click()
# 277 | type | css=input | 0 | 
driver.find_element(By.CSS_SELECTOR, "input").send_keys("0")
# 278 | click | css=input |  | 
driver.find_element(By.CSS_SELECTOR, "input").click()
# 279 | type | css=input | 1 | 
driver.find_element(By.CSS_SELECTOR, "input").send_keys("1")
# 280 | click | css=input |  | 
driver.find_element(By.CSS_SELECTOR, "input").click()
# 281 | type | css=input | 2 | 
driver.find_element(By.CSS_SELECTOR, "input").send_keys("2")
# 282 | click | css=input |  | 
driver.find_element(By.CSS_SELECTOR, "input").click()
# 283 | doubleClick | css=input |  | 
element = driver.find_element(By.CSS_SELECTOR, "input")
actions = ActionChains(driver)
actions.double_click(element).perform()
# 284 | type | css=input | 3 | 
driver.find_element(By.CSS_SELECTOR, "input").send_keys("3")
# 285 | click | css=input |  | 
driver.find_element(By.CSS_SELECTOR, "input").click()
# 286 | type | css=input | 17486328746298743290790 | 
driver.find_element(By.CSS_SELECTOR, "input").send_keys("17486328746298743290790")
# 287 | type | css=input | 1.74863287462987432e+22 | 
driver.find_element(By.CSS_SELECTOR, "input").send_keys("1.74863287462987432e+22")
# 288 | click | css=input |  | 
driver.find_element(By.CSS_SELECTOR, "input").click()
# 289 | click | css=input |  | 
driver.find_element(By.CSS_SELECTOR, "input").click()
# 290 | doubleClick | css=input |  | 
element = driver.find_element(By.CSS_SELECTOR, "input")
actions = ActionChains(driver)
actions.double_click(element).perform()
# 291 | click | css=input |  | 
driver.find_element(By.CSS_SELECTOR, "input").click()
# 292 | click | css=input |  | 
driver.find_element(By.CSS_SELECTOR, "input").click()
# 293 | click | css=input |  | 
driver.find_element(By.CSS_SELECTOR, "input").click()
# 294 | click | css=input |  | 
driver.find_element(By.CSS_SELECTOR, "input").click()
# 295 | click | css=input |  | 
driver.find_element(By.CSS_SELECTOR, "input").click()
# 296 | doubleClick | css=input |  | 
element = driver.find_element(By.CSS_SELECTOR, "input")
actions = ActionChains(driver)
actions.double_click(element).perform()
# 297 | click | css=input |  | 
driver.find_element(By.CSS_SELECTOR, "input").click()
# 298 | click | css=input |  | 
driver.find_element(By.CSS_SELECTOR, "input").click()
# 299 | click | linkText=JQuery UI Menus |  | 
driver.find_element(By.LINK_TEXT, "JQuery UI Menus").click()
# 300 | click | id=ui-id-1 |  | 
driver.find_element(By.ID, "ui-id-1").click()
# 301 | click | css=.large-4 |  | 
driver.find_element(By.CSS_SELECTOR, ".large-4").click()
# 302 | click | id=ui-id-5 |  | 
driver.find_element(By.ID, "ui-id-5").click()
# 303 | click | linkText=Menu |  | 
driver.find_element(By.LINK_TEXT, "Menu").click()
# 304 | click | linkText=JavaScript Alerts |  | 
driver.find_element(By.LINK_TEXT, "JavaScript Alerts").click()
# 305 | click | css=li:nth-child(1) > button |  | 
driver.find_element(By.CSS_SELECTOR, "li:nth-child(1) > button").click()
# 306 | assertAlert | I am a JS Alert |  | 
assert driver.switch_to.alert.text == "I am a JS Alert"
# 307 | chooseCancelOnNextConfirmation |  |  | 
# 308 | click | css=li:nth-child(2) > button |  | 
driver.find_element(By.CSS_SELECTOR, "li:nth-child(2) > button").click()
# 309 | assertConfirmation | I am a JS Confirm |  | 
assert driver.switch_to.alert.text == "I am a JS Confirm"
# 310 | webdriverChooseCancelOnVisibleConfirmation |  |  | 
driver.switch_to.alert.dismiss()
# 311 | chooseOkOnNextConfirmation |  |  | 
# 312 | click | css=li:nth-child(2) > button |  | 
driver.find_element(By.CSS_SELECTOR, "li:nth-child(2) > button").click()
# 313 | assertConfirmation | I am a JS Confirm |  | 
assert driver.switch_to.alert.text == "I am a JS Confirm"
# 314 | webdriverChooseOkOnVisibleConfirmation |  |  | 
driver.switch_to.alert.accept()
# 315 | answerOnNextPrompt | Hello World  |  | 
# 316 | click | css=li:nth-child(3) > button |  | 
driver.find_element(By.CSS_SELECTOR, "li:nth-child(3) > button").click()
# 317 | assertPrompt | I am a JS prompt |  | 
assert driver.switch_to.alert.text == "I am a JS prompt"
# 318 | webdriverAnswerOnVisiblePrompt | Hello World  |  | 
alert = driver.switch_to.alert
alert.send_keys("Hello World ")
alert.accept()
# 319 | answerOnNextPrompt | Cracking Selenium Interview |  | 
# 320 | click | css=li:nth-child(3) > button |  | 
driver.find_element(By.CSS_SELECTOR, "li:nth-child(3) > button").click()
# 321 | assertPrompt | I am a JS prompt |  | 
assert driver.switch_to.alert.text == "I am a JS prompt"
# 322 | webdriverAnswerOnVisiblePrompt | Cracking Selenium Interview |  | 
alert = driver.switch_to.alert
alert.send_keys("Cracking Selenium Interview")
alert.accept()
# 323 | click | linkText=JavaScript onload event error |  | 
driver.find_element(By.LINK_TEXT, "JavaScript onload event error").click()
# 324 | click | css=p |  | 
driver.find_element(By.CSS_SELECTOR, "p").click()
# 325 | click | css=html |  | 
driver.find_element(By.CSS_SELECTOR, "html").click()
# 326 | click | linkText=Key Presses |  | 
driver.find_element(By.LINK_TEXT, "Key Presses").click()
# 327 | click | id=target |  | 
driver.find_element(By.ID, "target").click()
# 328 | click | id=target |  | 
driver.find_element(By.ID, "target").click()
# 329 | sendKeys | id=target | ${KEY_ENTER} | 
driver.find_element(By.ID, "target").send_keys(Keys.ENTER)
# 330 | click | css=html |  | 
driver.find_element(By.CSS_SELECTOR, "html").click()
# 331 | click | css=html |  | 
driver.find_element(By.CSS_SELECTOR, "html").click()
# 332 | click | css=html |  | 
driver.find_element(By.CSS_SELECTOR, "html").click()
# 333 | click | linkText=Large & Deep DOM |  | 
driver.find_element(By.LINK_TEXT, "Large & Deep DOM").click()
# 334 | storeText | id=sibling-10.3 | NestedDomExample | 
vars["NestedDomExample"] = driver.find_element(By.ID, "sibling-10.3").text
# 335 | storeText | id=no-siblings | NoSiblingDom | 
vars["NoSiblingDom"] = driver.find_element(By.ID, "no-siblings").text
# 336 | storeText | css=.row-9 > .column-8 | TableElementDom | 
vars["TableElementDom"] = driver.find_element(By.CSS_SELECTOR, ".row-9 > .column-8").text
# 337 | assertText | id=header-2 | 2 | 
assert driver.find_element(By.ID, "header-2").text == "2"
# 338 | click | linkText=Multiple Windows |  | 
driver.find_element(By.LINK_TEXT, "Multiple Windows").click()
# 339 | click | linkText=Click Here |  | 
vars["window_handles"] = driver.window_handles
# 340 | storeWindowHandle | root |  | 
driver.find_element(By.LINK_TEXT, "Click Here").click()
# 341 | selectWindow | handle=${win1036} |  | 
vars["win1036"] = wait_for_window(2000)
# 342 | close |  |  | 
vars["root"] = driver.current_window_handle
# 343 | selectWindow | handle=${root} |  | 
driver.switch_to.window(vars["win1036"])
# 344 | click | linkText=Click Here |  | 
driver.close()
# 345 | selectWindow | handle=${win137} |  | 
driver.switch_to.window(vars["root"])
# 346 | close |  |  | 
vars["window_handles"] = driver.window_handles
# 347 | selectWindow | handle=${root} |  | 
driver.find_element(By.LINK_TEXT, "Click Here").click()
# 348 | click | linkText=Nested Frames |  | 
vars["win137"] = wait_for_window(2000)
# 349 | click | linkText=Notification Messages |  | 
driver.switch_to.window(vars["win137"])
# 350 | click | linkText=Click here |  | 
driver.close()
# 351 | click | linkText=Click here |  | 
driver.switch_to.window(vars["root"])
# 352 | verifyText | id=flash | Action successful\n× | 
driver.find_element(By.LINK_TEXT, "Nested Frames").click()
# 353 | click | linkText=Click here |  | 
driver.find_element(By.LINK_TEXT, "Notification Messages").click()
# 354 | click | linkText=Redirect Link |  | 
driver.find_element(By.LINK_TEXT, "Click here").click()
# 355 | assertText | id=redirect | here | 
driver.find_element(By.LINK_TEXT, "Click here").click()
# 356 | click | id=redirect |  | 
assert driver.find_element(By.ID, "flash").text == "Action successful\n×"
# 357 | click | linkText=200 |  | 
driver.find_element(By.LINK_TEXT, "Click here").click()
# 358 | click | linkText=here |  | 
driver.find_element(By.LINK_TEXT, "Redirect Link").click()
# 359 | click | linkText=301 |  | 
assert driver.find_element(By.ID, "redirect").text == "here"
# 360 | click | linkText=here |  | 
driver.find_element(By.ID, "redirect").click()
# 361 | click | linkText=404 |  | 
driver.find_element(By.LINK_TEXT, "200").click()
# 362 | click | linkText=here |  | 
driver.find_element(By.LINK_TEXT, "here").click()
# 363 | click | linkText=500 |  | 
driver.find_element(By.LINK_TEXT, "301").click()
# 364 | click | linkText=here |  | 
driver.find_element(By.LINK_TEXT, "here").click()
# 365 | assertText | css=p:nth-child(2) | HTTP status codes are a standard set of numbers used to communicate from a web server to your browser to indicate the outcome of the request being made (e.g. Success, Redirection, Client Error, Server Error). For a complete list of status codes, go here.\n\nSome standard status codes you will run into include but are not limited to: | 
driver.find_element(By.LINK_TEXT, "404").click()
# 366 | click | linkText=Secure File Download |  | 
driver.find_element(By.LINK_TEXT, "here").click()
# 367 | click | linkText=some-file.txt |  | 
driver.find_element(By.LINK_TEXT, "500").click()
# 368 | click | linkText=Shifting Content |  | 
driver.find_element(By.LINK_TEXT, "here").click()
# 369 | click | linkText=Example 1: Menu Element |  | 
assert driver.find_element(By.CSS_SELECTOR, "p:nth-child(2)").text == "HTTP status codes are a standard set of numbers used to communicate from a web server to your browser to indicate the outcome of the request being made (e.g. Success, Redirection, Client Error, Server Error). For a complete list of status codes, go here.\n\nSome standard status codes you will run into include but are not limited to:"
# 370 | click | linkText=Contact Us |  | 
driver.find_element(By.LINK_TEXT, "Secure File Download").click()
# 371 | click | linkText=click here |  | 
driver.find_element(By.LINK_TEXT, "some-file.txt").click()
# 372 | click | css=p:nth-child(4) > a |  | 
driver.find_element(By.LINK_TEXT, "Shifting Content").click()
# 373 | click | css=p:nth-child(5) > a |  | 
driver.find_element(By.LINK_TEXT, "Example 1: Menu Element").click()
# 374 | click | css=p:nth-child(4) > a |  | 
driver.find_element(By.LINK_TEXT, "Contact Us").click()
# 375 | click | css=p:nth-child(5) > a |  | 
driver.find_element(By.LINK_TEXT, "click here").click()
# 376 | click | linkText=Example 2: An image |  | 
driver.find_element(By.CSS_SELECTOR, "p:nth-child(4) > a").click()
# 377 | click | css=p:nth-child(6) > a |  | 
driver.find_element(By.CSS_SELECTOR, "p:nth-child(5) > a").click()
# 378 | click | css=p:nth-child(5) > a |  | 
driver.find_element(By.CSS_SELECTOR, "p:nth-child(4) > a").click()
# 379 | click | css=p:nth-child(4) > a |  | 
driver.find_element(By.CSS_SELECTOR, "p:nth-child(5) > a").click()
# 380 | click | css=p:nth-child(4) > a |  | 
driver.find_element(By.LINK_TEXT, "Example 2: An image").click()
# 381 | doubleClick | css=p:nth-child(4) > a |  | 
driver.find_element(By.CSS_SELECTOR, "p:nth-child(6) > a").click()
# 382 | click | linkText=click here |  | 
driver.find_element(By.CSS_SELECTOR, "p:nth-child(5) > a").click()
# 383 | click | linkText=Example 3: List |  | 
driver.find_element(By.CSS_SELECTOR, "p:nth-child(4) > a").click()
# 384 | click | css=.large-6 |  | 
driver.find_element(By.CSS_SELECTOR, "p:nth-child(4) > a").click()
# 385 | click | css=.large-6 |  | 
element = driver.find_element(By.CSS_SELECTOR, "p:nth-child(4) > a")
actions = ActionChains(driver)
actions.double_click(element).perform()
# 386 | click | css=.large-6 |  | 
driver.find_element(By.LINK_TEXT, "click here").click()
# 387 | click | css=.large-6 |  | 
driver.find_element(By.LINK_TEXT, "Example 3: List").click()
# 388 | click | css=.large-6 |  | 
driver.find_element(By.CSS_SELECTOR, ".large-6").click()
# 389 | click | css=.large-6 |  | 
driver.find_element(By.CSS_SELECTOR, ".large-6").click()
# 390 | click | css=.large-6 |  | 
driver.find_element(By.CSS_SELECTOR, ".large-6").click()
# 391 | click | css=.large-6 |  | 
driver.find_element(By.CSS_SELECTOR, ".large-6").click()
# 392 | click | css=.row:nth-child(6) |  | 
driver.find_element(By.CSS_SELECTOR, ".large-6").click()
# 393 | click | css=.row:nth-child(6) |  | 
driver.find_element(By.CSS_SELECTOR, ".large-6").click()
# 394 | click | css=body |  | 
driver.find_element(By.CSS_SELECTOR, ".large-6").click()
# 395 | click | linkText=Slow Resources |  | 
driver.find_element(By.CSS_SELECTOR, ".large-6").click()
# 396 | click | id=content |  | 
driver.find_element(By.CSS_SELECTOR, ".row:nth-child(6)").click()
# 397 | verifyText | css=h3 | Slow Resources | 
driver.find_element(By.CSS_SELECTOR, ".row:nth-child(6)").click()
# 398 | click | css=.example |  | 
driver.find_element(By.CSS_SELECTOR, "body").click()
# 399 | click | css=p |  | 
driver.find_element(By.LINK_TEXT, "Slow Resources").click()
# 400 | click | linkText=Sortable Data Tables |  | 
driver.find_element(By.ID, "content").click()
# 401 | storeText | css=#table1 .header:nth-child(3) > span | TestSortedTableValue | 
assert driver.find_element(By.CSS_SELECTOR, "h3").text == "Slow Resources"
# 402 | click | linkText=delete |  | 
driver.find_element(By.CSS_SELECTOR, ".example").click()
# 403 | click | css=#table1 tr:nth-child(2) a:nth-child(2) |  | 
driver.find_element(By.CSS_SELECTOR, "p").click()
# 404 | click | css=tr:nth-child(2) > .action > a:nth-child(1) |  | 
driver.find_element(By.LINK_TEXT, "Sortable Data Tables").click()
# 405 | click | css=tr:nth-child(2) > .action > a:nth-child(2) |  | 
vars["TestSortedTableValue"] = driver.find_element(By.CSS_SELECTOR, "#table1 .header:nth-child(3) > span").text
# 406 | click | linkText=Sortable Data Tables |  | 
driver.find_element(By.LINK_TEXT, "delete").click()
# 407 | click | css=#table1 .header:nth-child(5) > span |  | 
driver.find_element(By.CSS_SELECTOR, "#table1 tr:nth-child(2) a:nth-child(2)").click()
# 408 | click | css=#table1 .header:nth-child(3) > span |  | 
driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) > .action > a:nth-child(1)").click()
# 409 | click | css=#table1 .header:nth-child(4) > span |  | 
driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) > .action > a:nth-child(2)").click()
# 410 | click | css=.dues:nth-child(1) |  | 
driver.find_element(By.LINK_TEXT, "Sortable Data Tables").click()
# 411 | click | css=.first-name:nth-child(1) |  | 
driver.find_element(By.CSS_SELECTOR, "#table1 .header:nth-child(5) > span").click()
# 412 | click | linkText=Status Codes |  | 
driver.find_element(By.CSS_SELECTOR, "#table1 .header:nth-child(3) > span").click()
# 413 | click | linkText=301 |  | 
driver.find_element(By.CSS_SELECTOR, "#table1 .header:nth-child(4) > span").click()
# 414 | click | linkText=Typos |  | 
driver.find_element(By.CSS_SELECTOR, ".dues:nth-child(1)").click()
# 415 | click | id=content |  | 
driver.find_element(By.CSS_SELECTOR, ".first-name:nth-child(1)").click()
# 416 | click | id=content |  | 
driver.find_element(By.LINK_TEXT, "Status Codes").click()
# 417 | doubleClick | id=content |  | 
driver.find_element(By.LINK_TEXT, "301").click()
# 418 | mouseDown | id=content |  | 
driver.find_element(By.LINK_TEXT, "Typos").click()
# 419 | mouseUp | css=.\_2BioG:nth-child(1) > span:nth-child(2) |  | 
driver.find_element(By.ID, "content").click()
# 420 | click | css=html |  | 
driver.find_element(By.ID, "content").click()
# 421 | click | linkText=WYSIWYG Editor |  | 
element = driver.find_element(By.ID, "content")
actions = ActionChains(driver)
actions.double_click(element).perform()
# 422 | close |  |  | 
element = driver.find_element(By.ID, "content")
actions = ActionChains(driver)
actions.move_to_element(element).click_and_hold().perform()
element = driver.find_element(By.CSS_SELECTOR, ".\_2BioG:nth-child(1) > span:nth-child(2)")
actions = ActionChains(driver)
actions.move_to_element(element).release().perform()
driver.find_element(By.CSS_SELECTOR, "html").click()
driver.find_element(By.LINK_TEXT, "WYSIWYG Editor").click()
driver.close()
  


#try:
# we have to wait for the page to refresh, the last thing that seems to be updated is the title
#WebDriverWait(driver, 10).until(EC.title_contains("Quiz!"))

# You should see "cheese! - Google Search"
print("Done Deal!")

#finally:
driver.quit()


  
def wait_for_window(self, timeout = 2):
    time.sleep(round(timeout / 1000))
    wh_now = driver.window_handles
    wh_then = vars["window_handles"]
    if len(wh_now) > len(wh_then):
        return set(wh_now).difference(set(wh_then)).pop()
  

   