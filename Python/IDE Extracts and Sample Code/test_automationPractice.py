# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys

class TestAutomationPractice():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_automationPractice(self):
    # Test name: AutomationPractice
    # Step # | name | target | value | comment
    # 1 | open | /index.php |  | 
    self.driver.get("http://automationpractice.com/index.php")
    # 2 | setWindowSize | 1050x708 |  | 
    self.driver.set_window_size(1050, 708)
    # 3 | click | css=.sfHover > .sf-with-ul |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".sfHover > .sf-with-ul").click()
    # 4 | click | css=li:nth-child(1) > .subcategory-image .replace-2x |  | 
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(1) > .subcategory-image .replace-2x").click()
    # 5 | click | id=layered_category_5 |  | 
    self.driver.find_element(By.ID, "layered_category_5").click()
    # 6 | mouseOver | id=layered_category_5 |  | 
    element = self.driver.find_element(By.ID, "layered_category_5")
    actions = ActionChains(driver)
    actions.move_to_element(element).perform()
    # 7 | mouseOut | id=layered_category_5 |  | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(driver)
    actions.move_to_element(element, 0, 0).perform()
    # 8 | click | id=layered_id_attribute_group_2 |  | 
    self.driver.find_element(By.ID, "layered_id_attribute_group_2").click()
    # 9 | click | id=layered_id_feature_5 |  | 
    self.driver.find_element(By.ID, "layered_id_feature_5").click()
    # 10 | click | id=layered_id_feature_11 |  | 
    self.driver.find_element(By.ID, "layered_id_feature_11").click()
    # 11 | click | linkText=Orange (1) |  | 
    self.driver.find_element(By.LINK_TEXT, "Orange (1)").click()
    # 12 | click | linkText=Orange (1) |  | 
    self.driver.find_element(By.LINK_TEXT, "Orange (1)").click()
    # 13 | mouseOver | linkText=Orange (1) |  | 
    element = self.driver.find_element(By.LINK_TEXT, "Orange (1)")
    actions = ActionChains(driver)
    actions.move_to_element(element).perform()
    # 14 | mouseOut | linkText=Orange (1) |  | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(driver)
    actions.move_to_element(element, 0, 0).perform()
    # 15 | click | id=color_1 |  | 
    self.driver.find_element(By.ID, "color_1").click()
    # 16 | click | id=group_1 |  | 
    self.driver.find_element(By.ID, "group_1").click()
    # 17 | select | id=group_1 | label=M | 
    dropdown = self.driver.find_element(By.ID, "group_1")
    dropdown.find_element(By.XPATH, "//option[. = 'M']").click()
    # 18 | click | id=group_1 |  | 
    self.driver.find_element(By.ID, "group_1").click()
    # 19 | click | css=.exclusive > span |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".exclusive > span").click()
    # 20 | click | css=.continue > span |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".continue > span").click()
    # 21 | click | css=.sfHover > .sf-with-ul |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".sfHover > .sf-with-ul").click()
    # 22 | click | linkText=Evening Dresses |  | 
    self.driver.find_element(By.LINK_TEXT, "Evening Dresses").click()
    # 23 | click | css=.product_img_link > .replace-2x |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".product_img_link > .replace-2x").click()
    # 24 | click | id=color_24 |  | 
    self.driver.find_element(By.ID, "color_24").click()
    # 25 | click | id=group_1 |  | 
    self.driver.find_element(By.ID, "group_1").click()
    # 26 | select | id=group_1 | label=M | 
    dropdown = self.driver.find_element(By.ID, "group_1")
    dropdown.find_element(By.XPATH, "//option[. = 'M']").click()
    # 27 | click | id=group_1 |  | 
    self.driver.find_element(By.ID, "group_1").click()
    # 28 | click | name=Submit |  | 
    self.driver.find_element(By.NAME, "Submit").click()
    # 29 | click | css=.continue > span |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".continue > span").click()
    # 30 | click | css=.sfHover:nth-child(3) > a |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".sfHover:nth-child(3) > a").click()
    # 31 | click | css=.last-item-of-tablet-line .replace-2x |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".last-item-of-tablet-line .replace-2x").click()
    # 32 | click | id=thumb_18 |  | 
    self.driver.find_element(By.ID, "thumb_18").click()
    # 33 | click | css=.fancybox-item |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".fancybox-item").click()
    # 34 | click | css=.button-plus > span |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".button-plus > span").click()
    # 35 | click | css=.icon-plus |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".icon-plus").click()
    # 36 | click | id=group_1 |  | 
    self.driver.find_element(By.ID, "group_1").click()
    # 37 | select | id=group_1 | label=L | 
    dropdown = self.driver.find_element(By.ID, "group_1")
    dropdown.find_element(By.XPATH, "//option[. = 'L']").click()
    # 38 | click | id=group_1 |  | 
    self.driver.find_element(By.ID, "group_1").click()
    # 39 | click | id=color_16 |  | 
    self.driver.find_element(By.ID, "color_16").click()
    # 40 | click | css=.exclusive > span |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".exclusive > span").click()
    # 41 | click | css=.continue > span |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".continue > span").click()
    # 42 | click | linkText=Blouses |  | 
    self.driver.find_element(By.LINK_TEXT, "Blouses").click()
    # 43 | click | id=layered_id_attribute_group_3 |  | 
    self.driver.find_element(By.ID, "layered_id_attribute_group_3").click()
    # 44 | click | css=.product_img_link > .replace-2x |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".product_img_link > .replace-2x").click()
    # 45 | click | id=color_8 |  | 
    self.driver.find_element(By.ID, "color_8").click()
    # 46 | click | css=.icon-plus |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".icon-plus").click()
    # 47 | click | id=group_1 |  | 
    self.driver.find_element(By.ID, "group_1").click()
    # 48 | select | id=group_1 | label=M | 
    dropdown = self.driver.find_element(By.ID, "group_1")
    dropdown.find_element(By.XPATH, "//option[. = 'M']").click()
    # 49 | click | id=group_1 |  | 
    self.driver.find_element(By.ID, "group_1").click()
    # 50 | click | css=.exclusive > span |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".exclusive > span").click()
    # 51 | click | css=.continue > span |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".continue > span").click()
    # 52 | click | css=a > b |  | 
    self.driver.find_element(By.CSS_SELECTOR, "a > b").click()
    # 53 | click | css=.standard-checkout > span |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".standard-checkout > span").click()
    # 54 | click | id=email_create |  | 
    self.driver.find_element(By.ID, "email_create").click()
    # 55 | type | id=email_create | a@b.com | 
    self.driver.find_element(By.ID, "email_create").send_keys("a@b.com")
    # 56 | click | css=#SubmitCreate > span |  | 
    self.driver.find_element(By.CSS_SELECTOR, "#SubmitCreate > span").click()
    # 57 | click | css=.columns-container |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".columns-container").click()
    # 58 | type | id=email_create | b@c.com | 
    self.driver.find_element(By.ID, "email_create").send_keys("b@c.com")
    # 59 | click | css=#SubmitCreate > span |  | 
    self.driver.find_element(By.CSS_SELECTOR, "#SubmitCreate > span").click()
    # 60 | click | css=html |  | 
    self.driver.find_element(By.CSS_SELECTOR, "html").click()
    # 61 | type | id=email_create | aa_bb@cc.com | 
    self.driver.find_element(By.ID, "email_create").send_keys("aa_bb@cc.com")
    # 62 | click | css=#SubmitCreate > span |  | 
    self.driver.find_element(By.CSS_SELECTOR, "#SubmitCreate > span").click()
    # 63 | click | id=id_gender1 |  | 
    self.driver.find_element(By.ID, "id_gender1").click()
    # 64 | click | id=customer_firstname |  | 
    self.driver.find_element(By.ID, "customer_firstname").click()
    # 65 | type | id=customer_firstname | Selenium | 
    self.driver.find_element(By.ID, "customer_firstname").send_keys("Selenium")
    # 66 | type | id=customer_lastname | User | 
    self.driver.find_element(By.ID, "customer_lastname").send_keys("User")
    # 67 | click | css=.password |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".password").click()
    # 68 | click | id=passwd |  | 
    self.driver.find_element(By.ID, "passwd").click()
    # 69 | type | id=passwd | aabbcc | 
    self.driver.find_element(By.ID, "passwd").send_keys("aabbcc")
    # 70 | click | id=days |  | 
    self.driver.find_element(By.ID, "days").click()
    # 71 | select | id=days | label=regexp:12\s+ | 
    dropdown = self.driver.find_element(By.ID, "days")
    dropdown.find_element(By.XPATH, "//option[. = 'regexp:12\s+']").click()
    # 72 | click | id=days |  | 
    self.driver.find_element(By.ID, "days").click()
    # 73 | click | id=months |  | 
    self.driver.find_element(By.ID, "months").click()
    # 74 | select | id=months | label=regexp:October\s | 
    dropdown = self.driver.find_element(By.ID, "months")
    dropdown.find_element(By.XPATH, "//option[. = 'regexp:October\s']").click()
    # 75 | click | id=months |  | 
    self.driver.find_element(By.ID, "months").click()
    # 76 | click | id=years |  | 
    self.driver.find_element(By.ID, "years").click()
    # 77 | select | id=years | label=regexp:1942\s+ | 
    dropdown = self.driver.find_element(By.ID, "years")
    dropdown.find_element(By.XPATH, "//option[. = 'regexp:1942\s+']").click()
    # 78 | click | id=years |  | 
    self.driver.find_element(By.ID, "years").click()
    # 79 | click | css=.checkbox:nth-child(8) > label |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".checkbox:nth-child(8) > label").click()
    # 80 | click | css=.checkbox:nth-child(9) > label |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".checkbox:nth-child(9) > label").click()
    # 81 | click | id=company |  | 
    self.driver.find_element(By.ID, "company").click()
    # 82 | click | id=company |  | 
    self.driver.find_element(By.ID, "company").click()
    # 83 | doubleClick | id=company |  | 
    element = self.driver.find_element(By.ID, "company")
    actions = ActionChains(driver)
    actions.double_click(element).perform()
    # 84 | type | id=company | aa | 
    self.driver.find_element(By.ID, "company").send_keys("aa")
    # 85 | click | id=address1 |  | 
    self.driver.find_element(By.ID, "address1").click()
    # 86 | click | id=address1 |  | 
    self.driver.find_element(By.ID, "address1").click()
    # 87 | doubleClick | id=address1 |  | 
    element = self.driver.find_element(By.ID, "address1")
    actions = ActionChains(driver)
    actions.double_click(element).perform()
    # 88 | type | id=address1 | 12345, Sixth Street | 
    self.driver.find_element(By.ID, "address1").send_keys("12345, Sixth Street")
    # 89 | type | id=address2 | Seventh Avenue | 
    self.driver.find_element(By.ID, "address2").send_keys("Seventh Avenue")
    # 90 | type | id=city | Denver | 
    self.driver.find_element(By.ID, "city").send_keys("Denver")
    # 91 | select | id=id_state | label=Colorado | 
    dropdown = self.driver.find_element(By.ID, "id_state")
    dropdown.find_element(By.XPATH, "//option[. = 'Colorado']").click()
    # 92 | type | id=postcode | 80201 | 
    self.driver.find_element(By.ID, "postcode").send_keys("80201")
    # 93 | type | id=phone | 9876543241 | 
    self.driver.find_element(By.ID, "phone").send_keys("9876543241")
    # 94 | click | css=.is_customer_param |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".is_customer_param").click()
    # 95 | click | id=phone_mobile |  | 
    self.driver.find_element(By.ID, "phone_mobile").click()
    # 96 | type | id=phone_mobile | 9876543241 | 
    self.driver.find_element(By.ID, "phone_mobile").send_keys("9876543241")
    # 97 | click | id=alias |  | 
    self.driver.find_element(By.ID, "alias").click()
    # 98 | click | css=#submitAccount > span |  | 
    self.driver.find_element(By.CSS_SELECTOR, "#submitAccount > span").click()
    # 99 | click | css=.button:nth-child(4) > span |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".button:nth-child(4) > span").click()
    # 100 | click | id=cgv |  | 
    self.driver.find_element(By.ID, "cgv").click()
    # 101 | click | css=.standard-checkout > span |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".standard-checkout > span").click()
    # 102 | click | linkText=Pay by bank wire (order processing will be longer) |  | 
    self.driver.find_element(By.LINK_TEXT, "Pay by bank wire (order processing will be longer)").click()
    # 103 | click | css=#cart_navigation span |  | 
    self.driver.find_element(By.CSS_SELECTOR, "#cart_navigation span").click()
    # 104 | click | linkText=Back to orders |  | 
    self.driver.find_element(By.LINK_TEXT, "Back to orders").click()
    # 105 | close |  |  | 
    self.driver.close()
  
