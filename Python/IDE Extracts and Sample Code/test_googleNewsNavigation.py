# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys

class TestGoogleNewsNavigation():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def wait_for_window(self, timeout = 2):
    time.sleep(round(timeout / 1000))
    wh_now = self.driver.window_handles
    wh_then = self.vars["window_handles"]
    if len(wh_now) > len(wh_then):
      return set(wh_now).difference(set(wh_then)).pop()
  
  def test_googleNewsNavigation(self):
    # Test name: GoogleNewsNavigation
    # Step # | name | target | value | comment
    # 1 | open | /?hl=en-IN&gl=IN&ceid=IN:en |  | 
    self.driver.get("https://news.google.com/?hl=en-IN&gl=IN&ceid=IN:en")
    # 2 | setWindowSize | 1050x708 |  | 
    self.driver.set_window_size(1050, 708)
    # 3 | click | linkText=More Headlines |  | 
    self.driver.find_element(By.LINK_TEXT, "More Headlines").click()
    # 4 | click | css=.Ax4B8 |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".Ax4B8").click()
    # 5 | click | css=#nngdp3031 .fDdcdd |  | 
    self.driver.find_element(By.CSS_SELECTOR, "#nngdp3031 .fDdcdd").click()
    # 6 | type | css=.Ax4B8 | selenium | 
    self.driver.find_element(By.CSS_SELECTOR, ".Ax4B8").send_keys("selenium")
    # 7 | mouseOver | css=.y6IFtc:nth-child(1) .VDXfz |  | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".y6IFtc:nth-child(1) .VDXfz")
    actions = ActionChains(driver)
    actions.move_to_element(element).perform()
    # 8 | mouseOut | css=.y6IFtc:nth-child(1) .VDXfz |  | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(driver)
    actions.move_to_element(element, 0, 0).perform()
    # 9 | click | css=.Ax4B8 |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".Ax4B8").click()
    # 10 | click | css=#nngdp3030 .KfXsid |  | 
    self.driver.find_element(By.CSS_SELECTOR, "#nngdp3030 .KfXsid").click()
    # 11 | runScript | window.scrollTo(0,0) |  | 
    self.driver.execute_script("window.scrollTo(0,0)")
    # 12 | runScript | window.scrollTo(0,97) |  | 
    self.driver.execute_script("window.scrollTo(0,97)")
    # 13 | runScript | window.scrollTo(0,700) |  | 
    self.driver.execute_script("window.scrollTo(0,700)")
    # 14 | runScript | window.scrollTo(0,855) |  | 
    self.driver.execute_script("window.scrollTo(0,855)")
    # 15 | runScript | window.scrollTo(0,1000) |  | 
    self.driver.execute_script("window.scrollTo(0,1000)")
    # 16 | click | css=.NiLAwe:nth-child(12) .VDXfz |  | 
    self.vars["window_handles"] = self.driver.window_handles
    # 17 | storeWindowHandle | root |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".NiLAwe:nth-child(12) .VDXfz").click()
    # 18 | selectWindow | handle=${win2364} |  | 
    self.vars["win2364"] = self.wait_for_window(2000)
    # 19 | assertTitle | ﻿Global Automation Testing Tools Market Key Players 2019 – Selenium, TestComplete, QMetry Automation Studio, Testim.io, Cypress – MelodyReports |  | 
    self.vars["root"] = self.driver.current_window_handle
    # 20 | close |  |  | 
    self.driver.switch_to.window(self.vars["win2364"])
    # 21 | selectWindow | handle=${root} |  | 
    assert self.driver.title == "﻿Global Automation Testing Tools Market Key Players 2019 – Selenium, TestComplete, QMetry Automation Studio, Testim.io, Cypress – MelodyReports"
    # 22 | runScript | window.scrollTo(0,2515) |  | 
    self.driver.close()
    # 23 | click | css=.NiLAwe:nth-child(19) .VDXfz |  | 
    self.driver.switch_to.window(self.vars["root"])
    # 24 | selectWindow | handle=${win6239} |  | 
    self.driver.execute_script("window.scrollTo(0,2515)")
    # 25 | runScript | window.scrollTo(0,898) |  | 
    self.vars["window_handles"] = self.driver.window_handles
    # 26 | runScript | window.scrollTo(0,1790) |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".NiLAwe:nth-child(19) .VDXfz").click()
    # 27 | runScript | window.scrollTo(0,1590) |  | 
    self.vars["win6239"] = self.wait_for_window(2000)
    # 28 | click | css=a > strong > span |  | 
    self.driver.switch_to.window(self.vars["win6239"])
    # 29 | mouseOver | linkText=Events |  | 
    self.driver.execute_script("window.scrollTo(0,898)")
    # 30 | mouseOut | linkText=Events |  | 
    self.driver.execute_script("window.scrollTo(0,1790)")
    # 31 | runScript | window.scrollTo(0,400) |  | 
    self.driver.execute_script("window.scrollTo(0,1590)")
    # 32 | runScript | window.scrollTo(0,500) |  | 
    self.driver.find_element(By.CSS_SELECTOR, "a > strong > span").click()
    # 33 | runScript | window.scrollTo(0,1100) |  | 
    element = self.driver.find_element(By.LINK_TEXT, "Events")
    actions = ActionChains(driver)
    actions.move_to_element(element).perform()
    # 34 | runScript | window.scrollTo(0,800) |  | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(driver)
    actions.move_to_element(element, 0, 0).perform()
    # 35 | runScript | window.scrollTo(0,900) |  | 
    self.driver.execute_script("window.scrollTo(0,400)")
    # 36 | runScript | window.scrollTo(0,2401) |  | 
    self.driver.execute_script("window.scrollTo(0,500)")
    # 37 | close |  |  | 
    self.driver.execute_script("window.scrollTo(0,1100)")
    # 38 | selectWindow | handle=${root} |  | 
    self.driver.execute_script("window.scrollTo(0,800)")
    # 39 | close |  |  | 
    self.driver.execute_script("window.scrollTo(0,900)")
    self.driver.execute_script("window.scrollTo(0,2401)")
    self.driver.close()
    self.driver.switch_to.window(self.vars["root"])
    self.driver.close()
  
