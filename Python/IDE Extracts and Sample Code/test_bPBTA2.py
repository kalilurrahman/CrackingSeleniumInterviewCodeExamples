# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys

class TestBPBTA2():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_bPBTA2(self):
    # Test name: BPBTA2
    # Step # | name | target | value | comment
    # 1 | open | https://bpbonline.com/ |  | 
    self.driver.get("https://bpbonline.com/")
    # 2 | setWindowSize | 1050x708 |  | 
    self.driver.set_window_size(1050, 708)
    # 3 | click | css=.hover > .expand |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".hover > .expand").click()
    # 4 | click | css=.hover > .expand |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".hover > .expand").click()
    # 5 | assertText | linkText=Data Structure & Algorithms | Data Structure & Algorithms | 
    assert self.driver.find_element(By.LINK_TEXT, "Data Structure & Algorithms").text == "Data Structure & Algorithms"
    # 6 | mouseOver | linkText=Computer Books |  | 
    element = self.driver.find_element(By.LINK_TEXT, "Computer Books")
    actions = ActionChains(driver)
    actions.move_to_element(element).perform()
    # 7 | mouseOut | linkText=Computer Books |  | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(driver)
    actions.move_to_element(element, 0, 0).perform()
    # 8 | click | css=.hover span |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".hover span").click()
    # 9 | assertText | css=.col-md-3:nth-child(2) h4 | Cloud Computing -Master Cloud Computing Concepts Architecture and Applications with Real-world examples and case studies | 
    assert self.driver.find_element(By.CSS_SELECTOR, ".col-md-3:nth-child(2) h4").text == "Cloud Computing -Master Cloud Computing Concepts Architecture and Applications with Real-world examples and case studies"
    # 10 | verifyText | css=.col-md-3:nth-child(1) h4 | SharePoint Online Modern Experience Practical Guide: Learn step by step how to use SharePoint Online Modern Experience  | 
    assert self.driver.find_element(By.CSS_SELECTOR, ".col-md-3:nth-child(1) h4").text == "SharePoint Online Modern Experience Practical Guide: Learn step by step how to use SharePoint Online Modern Experience "
    # 11 | mouseOver | css=#mCSB_1_container > li:nth-child(3) |  | 
    element = self.driver.find_element(By.CSS_SELECTOR, "#mCSB_1_container > li:nth-child(3)")
    actions = ActionChains(driver)
    actions.move_to_element(element).perform()
    # 12 | storeText | css=#mCSB_1_container > li:nth-child(3) | ListofBooks | 
    self.vars["ListofBooks"] = self.driver.find_element(By.CSS_SELECTOR, "#mCSB_1_container > li:nth-child(3)").text
    # 13 | click | css=#mCSB_1_container > li:nth-child(1) |  | 
    self.driver.find_element(By.CSS_SELECTOR, "#mCSB_1_container > li:nth-child(1)").click()
    # 14 | click | linkText=Skills |  | 
    self.driver.find_element(By.LINK_TEXT, "Skills").click()
    # 15 | click | linkText=Management Team |  | 
    self.driver.find_element(By.LINK_TEXT, "Management Team").click()
    # 16 | click | linkText=Home |  | 
    self.driver.find_element(By.LINK_TEXT, "Home").click()
    # 17 | click | linkText=Home |  | 
    self.driver.find_element(By.LINK_TEXT, "Home").click()
  
