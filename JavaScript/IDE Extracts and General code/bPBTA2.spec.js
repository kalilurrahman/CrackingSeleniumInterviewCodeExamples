// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('BPBTA2', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('firefox').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('BPBTA2', async function() {
    // Test name: BPBTA2
    // Step # | name | target | value | comment
    // 1 | open | https://bpbonline.com/ |  | 
    await driver.get("https://bpbonline.com/")
    // 2 | setWindowSize | 1050x708 |  | 
    await driver.setRect(1050, 708)
    // 3 | click | css=.hover > .expand |  | 
    await driver.findElement(By.css(".hover > .expand")).click()
    // 4 | click | css=.hover > .expand |  | 
    await driver.findElement(By.css(".hover > .expand")).click()
    // 5 | assertText | linkText=Data Structure & Algorithms | Data Structure & Algorithms | 
    assert(await driver.findElement(By.linkText("Data Structure & Algorithms")).getText() == "Data Structure & Algorithms")
    // 6 | mouseOver | linkText=Computer Books |  | 
    {
      const element = await driver.findElement(By.linkText("Computer Books"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 7 | mouseOut | linkText=Computer Books |  | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 8 | click | css=.hover span |  | 
    await driver.findElement(By.css(".hover span")).click()
    // 9 | assertText | css=.col-md-3:nth-child(2) h4 | Cloud Computing -Master Cloud Computing Concepts Architecture and Applications with Real-world examples and case studies | 
    assert(await driver.findElement(By.css(".col-md-3:nth-child(2) h4")).getText() == "Cloud Computing -Master Cloud Computing Concepts Architecture and Applications with Real-world examples and case studies")
    // 10 | verifyText | css=.col-md-3:nth-child(1) h4 | SharePoint Online Modern Experience Practical Guide: Learn step by step how to use SharePoint Online Modern Experience  | 
    assert(await driver.findElement(By.css(".col-md-3:nth-child(1) h4")).getText() == "SharePoint Online Modern Experience Practical Guide: Learn step by step how to use SharePoint Online Modern Experience ")
    // 11 | mouseOver | css=#mCSB_1_container > li:nth-child(3) |  | 
    {
      const element = await driver.findElement(By.css("#mCSB_1_container > li:nth-child(3)"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 12 | storeText | css=#mCSB_1_container > li:nth-child(3) | ListofBooks | 
    vars["ListofBooks"] = await driver.findElement(By.css("#mCSB_1_container > li:nth-child(3)")).getText()
    // 13 | click | css=#mCSB_1_container > li:nth-child(1) |  | 
    await driver.findElement(By.css("#mCSB_1_container > li:nth-child(1)")).click()
    // 14 | click | linkText=Skills |  | 
    await driver.findElement(By.linkText("Skills")).click()
    // 15 | click | linkText=Management Team |  | 
    await driver.findElement(By.linkText("Management Team")).click()
    // 16 | click | linkText=Home |  | 
    await driver.findElement(By.linkText("Home")).click()
    // 17 | click | linkText=Home |  | 
    await driver.findElement(By.linkText("Home")).click()
  })
})
