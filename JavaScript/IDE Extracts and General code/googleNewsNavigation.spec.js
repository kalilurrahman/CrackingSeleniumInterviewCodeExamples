// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('GoogleNewsNavigation', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('firefox').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  async function waitForWindow(timeout = 2) {
    await driver.sleep(timeout)
    const handlesThen = vars["windowHandles"]
    const handlesNow = await driver.getAllWindowHandles()
    if (handlesNow.length > handlesThen.length) {
      return handlesNow.find(handle => (!handlesThen.includes(handle)))
    }
    throw new Error("New window did not appear before timeout")
  }
  it('GoogleNewsNavigation', async function() {
    // Test name: GoogleNewsNavigation
    // Step # | name | target | value | comment
    // 1 | open | /?hl=en-IN&gl=IN&ceid=IN:en |  | 
    await driver.get("https://news.google.com/?hl=en-IN&gl=IN&ceid=IN:en")
    // 2 | setWindowSize | 1050x708 |  | 
    await driver.setRect(1050, 708)
    // 3 | click | linkText=More Headlines |  | 
    await driver.findElement(By.linkText("More Headlines")).click()
    // 4 | click | css=.Ax4B8 |  | 
    await driver.findElement(By.css(".Ax4B8")).click()
    // 5 | click | css=#nngdp3031 .fDdcdd |  | 
    await driver.findElement(By.css("#nngdp3031 .fDdcdd")).click()
    // 6 | type | css=.Ax4B8 | selenium | 
    await driver.findElement(By.css(".Ax4B8")).sendKeys("selenium")
    // 7 | mouseOver | css=.y6IFtc:nth-child(1) .VDXfz |  | 
    {
      const element = await driver.findElement(By.css(".y6IFtc:nth-child(1) .VDXfz"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 8 | mouseOut | css=.y6IFtc:nth-child(1) .VDXfz |  | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 9 | click | css=.Ax4B8 |  | 
    await driver.findElement(By.css(".Ax4B8")).click()
    // 10 | click | css=#nngdp3030 .KfXsid |  | 
    await driver.findElement(By.css("#nngdp3030 .KfXsid")).click()
    // 11 | runScript | window.scrollTo(0,0) |  | 
    await driver.executeScript("window.scrollTo(0,0)")
    // 12 | runScript | window.scrollTo(0,97) |  | 
    await driver.executeScript("window.scrollTo(0,97)")
    // 13 | runScript | window.scrollTo(0,700) |  | 
    await driver.executeScript("window.scrollTo(0,700)")
    // 14 | runScript | window.scrollTo(0,855) |  | 
    await driver.executeScript("window.scrollTo(0,855)")
    // 15 | runScript | window.scrollTo(0,1000) |  | 
    await driver.executeScript("window.scrollTo(0,1000)")
    // 16 | click | css=.NiLAwe:nth-child(12) .VDXfz |  | 
    vars["windowHandles"] = await driver.getAllWindowHandles()
    // 17 | storeWindowHandle | root |  | 
    await driver.findElement(By.css(".NiLAwe:nth-child(12) .VDXfz")).click()
    // 18 | selectWindow | handle=${win2364} |  | 
    vars["win2364"] = await waitForWindow(2000)
    // 19 | assertTitle | ﻿Global Automation Testing Tools Market Key Players 2019 – Selenium, TestComplete, QMetry Automation Studio, Testim.io, Cypress – MelodyReports |  | 
    vars["root"] = await driver.getWindowHandle()
    // 20 | close |  |  | 
    await driver.switchTo().window(vars["win2364"])
    // 21 | selectWindow | handle=${root} |  | 
    assert(await driver.getTitle() == "﻿Global Automation Testing Tools Market Key Players 2019 – Selenium, TestComplete, QMetry Automation Studio, Testim.io, Cypress – MelodyReports")
    // 22 | runScript | window.scrollTo(0,2515) |  | 
    await driver.close()
    // 23 | click | css=.NiLAwe:nth-child(19) .VDXfz |  | 
    await driver.switchTo().window(vars["root"])
    // 24 | selectWindow | handle=${win6239} |  | 
    await driver.executeScript("window.scrollTo(0,2515)")
    // 25 | runScript | window.scrollTo(0,898) |  | 
    vars["windowHandles"] = await driver.getAllWindowHandles()
    // 26 | runScript | window.scrollTo(0,1790) |  | 
    await driver.findElement(By.css(".NiLAwe:nth-child(19) .VDXfz")).click()
    // 27 | runScript | window.scrollTo(0,1590) |  | 
    vars["win6239"] = await waitForWindow(2000)
    // 28 | click | css=a > strong > span |  | 
    await driver.switchTo().window(vars["win6239"])
    // 29 | mouseOver | linkText=Events |  | 
    await driver.executeScript("window.scrollTo(0,898)")
    // 30 | mouseOut | linkText=Events |  | 
    await driver.executeScript("window.scrollTo(0,1790)")
    // 31 | runScript | window.scrollTo(0,400) |  | 
    await driver.executeScript("window.scrollTo(0,1590)")
    // 32 | runScript | window.scrollTo(0,500) |  | 
    await driver.findElement(By.css("a > strong > span")).click()
    // 33 | runScript | window.scrollTo(0,1100) |  | 
    {
      const element = await driver.findElement(By.linkText("Events"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 34 | runScript | window.scrollTo(0,800) |  | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 35 | runScript | window.scrollTo(0,900) |  | 
    await driver.executeScript("window.scrollTo(0,400)")
    // 36 | runScript | window.scrollTo(0,2401) |  | 
    await driver.executeScript("window.scrollTo(0,500)")
    // 37 | close |  |  | 
    await driver.executeScript("window.scrollTo(0,1100)")
    // 38 | selectWindow | handle=${root} |  | 
    await driver.executeScript("window.scrollTo(0,800)")
    // 39 | close |  |  | 
    await driver.executeScript("window.scrollTo(0,900)")
    await driver.executeScript("window.scrollTo(0,2401)")
    await driver.close()
    await driver.switchTo().window(vars["root"])
    await driver.close()
  })
})
