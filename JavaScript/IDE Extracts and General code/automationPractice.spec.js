// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('AutomationPractice', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('firefox').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('AutomationPractice', async function() {
    // Test name: AutomationPractice
    // Step # | name | target | value | comment
    // 1 | open | /index.php |  | 
    await driver.get("http://automationpractice.com/index.php")
    // 2 | setWindowSize | 1050x708 |  | 
    await driver.setRect(1050, 708)
    // 3 | click | css=.sfHover > .sf-with-ul |  | 
    await driver.findElement(By.css(".sfHover > .sf-with-ul")).click()
    // 4 | click | css=li:nth-child(1) > .subcategory-image .replace-2x |  | 
    await driver.findElement(By.css("li:nth-child(1) > .subcategory-image .replace-2x")).click()
    // 5 | click | id=layered_category_5 |  | 
    await driver.findElement(By.id("layered_category_5")).click()
    // 6 | mouseOver | id=layered_category_5 |  | 
    {
      const element = await driver.findElement(By.id("layered_category_5"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 7 | mouseOut | id=layered_category_5 |  | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 8 | click | id=layered_id_attribute_group_2 |  | 
    await driver.findElement(By.id("layered_id_attribute_group_2")).click()
    // 9 | click | id=layered_id_feature_5 |  | 
    await driver.findElement(By.id("layered_id_feature_5")).click()
    // 10 | click | id=layered_id_feature_11 |  | 
    await driver.findElement(By.id("layered_id_feature_11")).click()
    // 11 | click | linkText=Orange (1) |  | 
    await driver.findElement(By.linkText("Orange (1)")).click()
    // 12 | click | linkText=Orange (1) |  | 
    await driver.findElement(By.linkText("Orange (1)")).click()
    // 13 | mouseOver | linkText=Orange (1) |  | 
    {
      const element = await driver.findElement(By.linkText("Orange (1)"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 14 | mouseOut | linkText=Orange (1) |  | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 15 | click | id=color_1 |  | 
    await driver.findElement(By.id("color_1")).click()
    // 16 | click | id=group_1 |  | 
    await driver.findElement(By.id("group_1")).click()
    // 17 | select | id=group_1 | label=M | 
    {
      const dropdown = await driver.findElement(By.id("group_1"))
      await dropdown.findElement(By.xpath("//option[. = 'M']")).click()
    }
    // 18 | click | id=group_1 |  | 
    await driver.findElement(By.id("group_1")).click()
    // 19 | click | css=.exclusive > span |  | 
    await driver.findElement(By.css(".exclusive > span")).click()
    // 20 | click | css=.continue > span |  | 
    await driver.findElement(By.css(".continue > span")).click()
    // 21 | click | css=.sfHover > .sf-with-ul |  | 
    await driver.findElement(By.css(".sfHover > .sf-with-ul")).click()
    // 22 | click | linkText=Evening Dresses |  | 
    await driver.findElement(By.linkText("Evening Dresses")).click()
    // 23 | click | css=.product_img_link > .replace-2x |  | 
    await driver.findElement(By.css(".product_img_link > .replace-2x")).click()
    // 24 | click | id=color_24 |  | 
    await driver.findElement(By.id("color_24")).click()
    // 25 | click | id=group_1 |  | 
    await driver.findElement(By.id("group_1")).click()
    // 26 | select | id=group_1 | label=M | 
    {
      const dropdown = await driver.findElement(By.id("group_1"))
      await dropdown.findElement(By.xpath("//option[. = 'M']")).click()
    }
    // 27 | click | id=group_1 |  | 
    await driver.findElement(By.id("group_1")).click()
    // 28 | click | name=Submit |  | 
    await driver.findElement(By.name("Submit")).click()
    // 29 | click | css=.continue > span |  | 
    await driver.findElement(By.css(".continue > span")).click()
    // 30 | click | css=.sfHover:nth-child(3) > a |  | 
    await driver.findElement(By.css(".sfHover:nth-child(3) > a")).click()
    // 31 | click | css=.last-item-of-tablet-line .replace-2x |  | 
    await driver.findElement(By.css(".last-item-of-tablet-line .replace-2x")).click()
    // 32 | click | id=thumb_18 |  | 
    await driver.findElement(By.id("thumb_18")).click()
    // 33 | click | css=.fancybox-item |  | 
    await driver.findElement(By.css(".fancybox-item")).click()
    // 34 | click | css=.button-plus > span |  | 
    await driver.findElement(By.css(".button-plus > span")).click()
    // 35 | click | css=.icon-plus |  | 
    await driver.findElement(By.css(".icon-plus")).click()
    // 36 | click | id=group_1 |  | 
    await driver.findElement(By.id("group_1")).click()
    // 37 | select | id=group_1 | label=L | 
    {
      const dropdown = await driver.findElement(By.id("group_1"))
      await dropdown.findElement(By.xpath("//option[. = 'L']")).click()
    }
    // 38 | click | id=group_1 |  | 
    await driver.findElement(By.id("group_1")).click()
    // 39 | click | id=color_16 |  | 
    await driver.findElement(By.id("color_16")).click()
    // 40 | click | css=.exclusive > span |  | 
    await driver.findElement(By.css(".exclusive > span")).click()
    // 41 | click | css=.continue > span |  | 
    await driver.findElement(By.css(".continue > span")).click()
    // 42 | click | linkText=Blouses |  | 
    await driver.findElement(By.linkText("Blouses")).click()
    // 43 | click | id=layered_id_attribute_group_3 |  | 
    await driver.findElement(By.id("layered_id_attribute_group_3")).click()
    // 44 | click | css=.product_img_link > .replace-2x |  | 
    await driver.findElement(By.css(".product_img_link > .replace-2x")).click()
    // 45 | click | id=color_8 |  | 
    await driver.findElement(By.id("color_8")).click()
    // 46 | click | css=.icon-plus |  | 
    await driver.findElement(By.css(".icon-plus")).click()
    // 47 | click | id=group_1 |  | 
    await driver.findElement(By.id("group_1")).click()
    // 48 | select | id=group_1 | label=M | 
    {
      const dropdown = await driver.findElement(By.id("group_1"))
      await dropdown.findElement(By.xpath("//option[. = 'M']")).click()
    }
    // 49 | click | id=group_1 |  | 
    await driver.findElement(By.id("group_1")).click()
    // 50 | click | css=.exclusive > span |  | 
    await driver.findElement(By.css(".exclusive > span")).click()
    // 51 | click | css=.continue > span |  | 
    await driver.findElement(By.css(".continue > span")).click()
    // 52 | click | css=a > b |  | 
    await driver.findElement(By.css("a > b")).click()
    // 53 | click | css=.standard-checkout > span |  | 
    await driver.findElement(By.css(".standard-checkout > span")).click()
    // 54 | click | id=email_create |  | 
    await driver.findElement(By.id("email_create")).click()
    // 55 | type | id=email_create | a@b.com | 
    await driver.findElement(By.id("email_create")).sendKeys("a@b.com")
    // 56 | click | css=#SubmitCreate > span |  | 
    await driver.findElement(By.css("#SubmitCreate > span")).click()
    // 57 | click | css=.columns-container |  | 
    await driver.findElement(By.css(".columns-container")).click()
    // 58 | type | id=email_create | b@c.com | 
    await driver.findElement(By.id("email_create")).sendKeys("b@c.com")
    // 59 | click | css=#SubmitCreate > span |  | 
    await driver.findElement(By.css("#SubmitCreate > span")).click()
    // 60 | click | css=html |  | 
    await driver.findElement(By.css("html")).click()
    // 61 | type | id=email_create | aa_bb@cc.com | 
    await driver.findElement(By.id("email_create")).sendKeys("aa_bb@cc.com")
    // 62 | click | css=#SubmitCreate > span |  | 
    await driver.findElement(By.css("#SubmitCreate > span")).click()
    // 63 | click | id=id_gender1 |  | 
    await driver.findElement(By.id("id_gender1")).click()
    // 64 | click | id=customer_firstname |  | 
    await driver.findElement(By.id("customer_firstname")).click()
    // 65 | type | id=customer_firstname | Selenium | 
    await driver.findElement(By.id("customer_firstname")).sendKeys("Selenium")
    // 66 | type | id=customer_lastname | User | 
    await driver.findElement(By.id("customer_lastname")).sendKeys("User")
    // 67 | click | css=.password |  | 
    await driver.findElement(By.css(".password")).click()
    // 68 | click | id=passwd |  | 
    await driver.findElement(By.id("passwd")).click()
    // 69 | type | id=passwd | aabbcc | 
    await driver.findElement(By.id("passwd")).sendKeys("aabbcc")
    // 70 | click | id=days |  | 
    await driver.findElement(By.id("days")).click()
    // 71 | select | id=days | label=regexp:12\s+ | 
    {
      const dropdown = await driver.findElement(By.id("days"))
      await dropdown.findElement(By.xpath("//option[. = 'regexp:12\s+']")).click()
    }
    // 72 | click | id=days |  | 
    await driver.findElement(By.id("days")).click()
    // 73 | click | id=months |  | 
    await driver.findElement(By.id("months")).click()
    // 74 | select | id=months | label=regexp:October\s | 
    {
      const dropdown = await driver.findElement(By.id("months"))
      await dropdown.findElement(By.xpath("//option[. = 'regexp:October\s']")).click()
    }
    // 75 | click | id=months |  | 
    await driver.findElement(By.id("months")).click()
    // 76 | click | id=years |  | 
    await driver.findElement(By.id("years")).click()
    // 77 | select | id=years | label=regexp:1942\s+ | 
    {
      const dropdown = await driver.findElement(By.id("years"))
      await dropdown.findElement(By.xpath("//option[. = 'regexp:1942\s+']")).click()
    }
    // 78 | click | id=years |  | 
    await driver.findElement(By.id("years")).click()
    // 79 | click | css=.checkbox:nth-child(8) > label |  | 
    await driver.findElement(By.css(".checkbox:nth-child(8) > label")).click()
    // 80 | click | css=.checkbox:nth-child(9) > label |  | 
    await driver.findElement(By.css(".checkbox:nth-child(9) > label")).click()
    // 81 | click | id=company |  | 
    await driver.findElement(By.id("company")).click()
    // 82 | click | id=company |  | 
    await driver.findElement(By.id("company")).click()
    // 83 | doubleClick | id=company |  | 
    {
      const element = await driver.findElement(By.id("company"))
      await driver.actions({ bridge: true}).doubleClick(element).perform()
    }
    // 84 | type | id=company | aa | 
    await driver.findElement(By.id("company")).sendKeys("aa")
    // 85 | click | id=address1 |  | 
    await driver.findElement(By.id("address1")).click()
    // 86 | click | id=address1 |  | 
    await driver.findElement(By.id("address1")).click()
    // 87 | doubleClick | id=address1 |  | 
    {
      const element = await driver.findElement(By.id("address1"))
      await driver.actions({ bridge: true}).doubleClick(element).perform()
    }
    // 88 | type | id=address1 | 12345, Sixth Street | 
    await driver.findElement(By.id("address1")).sendKeys("12345, Sixth Street")
    // 89 | type | id=address2 | Seventh Avenue | 
    await driver.findElement(By.id("address2")).sendKeys("Seventh Avenue")
    // 90 | type | id=city | Denver | 
    await driver.findElement(By.id("city")).sendKeys("Denver")
    // 91 | select | id=id_state | label=Colorado | 
    {
      const dropdown = await driver.findElement(By.id("id_state"))
      await dropdown.findElement(By.xpath("//option[. = 'Colorado']")).click()
    }
    // 92 | type | id=postcode | 80201 | 
    await driver.findElement(By.id("postcode")).sendKeys("80201")
    // 93 | type | id=phone | 9876543241 | 
    await driver.findElement(By.id("phone")).sendKeys("9876543241")
    // 94 | click | css=.is_customer_param |  | 
    await driver.findElement(By.css(".is_customer_param")).click()
    // 95 | click | id=phone_mobile |  | 
    await driver.findElement(By.id("phone_mobile")).click()
    // 96 | type | id=phone_mobile | 9876543241 | 
    await driver.findElement(By.id("phone_mobile")).sendKeys("9876543241")
    // 97 | click | id=alias |  | 
    await driver.findElement(By.id("alias")).click()
    // 98 | click | css=#submitAccount > span |  | 
    await driver.findElement(By.css("#submitAccount > span")).click()
    // 99 | click | css=.button:nth-child(4) > span |  | 
    await driver.findElement(By.css(".button:nth-child(4) > span")).click()
    // 100 | click | id=cgv |  | 
    await driver.findElement(By.id("cgv")).click()
    // 101 | click | css=.standard-checkout > span |  | 
    await driver.findElement(By.css(".standard-checkout > span")).click()
    // 102 | click | linkText=Pay by bank wire (order processing will be longer) |  | 
    await driver.findElement(By.linkText("Pay by bank wire (order processing will be longer)")).click()
    // 103 | click | css=#cart_navigation span |  | 
    await driver.findElement(By.css("#cart_navigation span")).click()
    // 104 | click | linkText=Back to orders |  | 
    await driver.findElement(By.linkText("Back to orders")).click()
    // 105 | close |  |  | 
    await driver.close()
  })
})
