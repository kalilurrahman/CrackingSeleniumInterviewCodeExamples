// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('DuckDuckGo', function() {
  this.timeout(300000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('DuckDuckGo', async function() {
    // Test name: DuckDuckGo
    // Step # | name | target | value | comment
    // 1 | open | https://duckduckgo.com/ |  |
    await driver.get("https://duckduckgo.com/")
    // 2 | type | id=search_form_input_homepage | selenium |
    await driver.findElement(By.id("search_form_input_homepage")).sendKeys("selenium")
    // 3 | Take a Screenshot
	var fs = require('fs')
	await driver.takeScreenshot().then(
		function(ScreenShotImage, err) {
			fs.writeFile('ddg_screen_shot_1.png', ScreenShotImage, 'base64', function(error) {
				if(error!=null)
					console.log("Error occured during screenshot" + error);
			});
		}
	);
    // 4 | sendKeys | id=search_form_input_homepage | ${KEY_ENTER} |
    await driver.findElement(By.id("search_form_input_homepage")).sendKeys(Key.ENTER)
    // 5 | click | linkText=Selenium - Web Browser Automation |  |
	driver.takeScreenshot().then(
		function(ScreenShotImage, err) {
			fs.writeFile('ddg_screen_shot_2.png', ScreenShotImage, 'base64', function(error) {
				if(error!=null)
					console.log("Error occured during screenshot" + error);
			});
		}
	);
    await driver.findElement(By.linkText("Selenium - Web Browser Automation")).click()
    // 6 | close |  |  |
    await driver.close()
  })
})
